//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/kryst/Desktop/Praca magisterska/st-grammar/st.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="stParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IstVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] stParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.literalValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralValue([NotNull] stParser.LiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.numericLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericLiteral([NotNull] stParser.NumericLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.intLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntLiteral([NotNull] stParser.IntLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.intLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntLiteralValue([NotNull] stParser.IntLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.intTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntTypeName([NotNull] stParser.IntTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.unsignedIntTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnsignedIntTypeName([NotNull] stParser.UnsignedIntTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.signedIntTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSignedIntTypeName([NotNull] stParser.SignedIntTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.multibitsLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultibitsLiteral([NotNull] stParser.MultibitsLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.multibitsLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultibitsLiteralValue([NotNull] stParser.MultibitsLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.multibitsTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultibitsTypeName([NotNull] stParser.MultibitsTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.realLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRealLiteral([NotNull] stParser.RealLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.realLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRealLiteralValue([NotNull] stParser.RealLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.realTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRealTypeName([NotNull] stParser.RealTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.boolLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolLiteral([NotNull] stParser.BoolLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.boolLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolLiteralValue([NotNull] stParser.BoolLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.boolTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolTypeName([NotNull] stParser.BoolTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.charLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharLiteral([NotNull] stParser.CharLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.charString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharString([NotNull] stParser.CharStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.charTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharTypeName([NotNull] stParser.CharTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.timeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeLiteral([NotNull] stParser.TimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.durationLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDurationLiteral([NotNull] stParser.DurationLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.durationLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDurationLiteralValue([NotNull] stParser.DurationLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.durationTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDurationTypeName([NotNull] stParser.DurationTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.timeOfDayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeOfDayLiteral([NotNull] stParser.TimeOfDayLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.timeOfDayLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeOfDayLiteralValue([NotNull] stParser.TimeOfDayLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.timeOfDayTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeOfDayTypeName([NotNull] stParser.TimeOfDayTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateLiteral([NotNull] stParser.DateLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateLiteralValue([NotNull] stParser.DateLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTypeName([NotNull] stParser.DateTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateAndTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateAndTimeLiteral([NotNull] stParser.DateAndTimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateAndTimeLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateAndTimeLiteralValue([NotNull] stParser.DateAndTimeLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateAndTimeTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateAndTimeTypeName([NotNull] stParser.DateAndTimeTypeNameContext context);
}
