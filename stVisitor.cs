//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/kryst/Desktop/Praca magisterska/st-grammar/st.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="stParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IstVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.file"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFile([NotNull] stParser.FileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.pouDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPouDeclaration([NotNull] stParser.PouDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.namespaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceDeclaration([NotNull] stParser.NamespaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.namespaceElements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceElements([NotNull] stParser.NamespaceElementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.namespaceAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceAccess([NotNull] stParser.NamespaceAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.namespaceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceName([NotNull] stParser.NamespaceNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.usingDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUsingDirective([NotNull] stParser.UsingDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.programDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgramDeclaration([NotNull] stParser.ProgramDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.programName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgramName([NotNull] stParser.ProgramNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.programNameAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgramNameAccess([NotNull] stParser.ProgramNameAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.programBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgramBody([NotNull] stParser.ProgramBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dataTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataTypeDeclaration([NotNull] stParser.DataTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.typeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDeclaration([NotNull] stParser.TypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.simpleTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleTypeDeclaration([NotNull] stParser.SimpleTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.simpleTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleTypeName([NotNull] stParser.SimpleTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.simpleSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleSpecificationInit([NotNull] stParser.SimpleSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.simpleInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleInit([NotNull] stParser.SimpleInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.simpleSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleSpecification([NotNull] stParser.SimpleSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.elementaryTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementaryTypeName([NotNull] stParser.ElementaryTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.simpleTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSimpleTypeAccess([NotNull] stParser.SimpleTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringTypeName([NotNull] stParser.StringTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringSize([NotNull] stParser.StringSizeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrangeTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeTypeDeclaration([NotNull] stParser.SubrangeTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrangeTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeTypeName([NotNull] stParser.SubrangeTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrangeSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeSpecificationInit([NotNull] stParser.SubrangeSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrangeSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeSpecification([NotNull] stParser.SubrangeSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrangeInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeInit([NotNull] stParser.SubrangeInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrangeTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeTypeAccess([NotNull] stParser.SubrangeTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrange([NotNull] stParser.SubrangeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrangeBegin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeBegin([NotNull] stParser.SubrangeBeginContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subrangeEnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubrangeEnd([NotNull] stParser.SubrangeEndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumTypeDeclaration([NotNull] stParser.EnumTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumTypeName([NotNull] stParser.EnumTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumNamedSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumNamedSpecificationInit([NotNull] stParser.EnumNamedSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumElementSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumElementSpecificationInit([NotNull] stParser.EnumElementSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumElementName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumElementName([NotNull] stParser.EnumElementNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumElementValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumElementValue([NotNull] stParser.EnumElementValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumValue([NotNull] stParser.EnumValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumSpecificationInit([NotNull] stParser.EnumSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.enumTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEnumTypeAccess([NotNull] stParser.EnumTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayTypeDeclaration([NotNull] stParser.ArrayTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayTypeName([NotNull] stParser.ArrayTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arraySpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraySpecificationInit([NotNull] stParser.ArraySpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arraySpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArraySpecification([NotNull] stParser.ArraySpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayTypeAccess([NotNull] stParser.ArrayTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayInit([NotNull] stParser.ArrayInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayElementInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayElementInit([NotNull] stParser.ArrayElementInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayElementMultiplier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayElementMultiplier([NotNull] stParser.ArrayElementMultiplierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayElementInitValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayElementInitValue([NotNull] stParser.ArrayElementInitValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayConformDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayConformDeclaration([NotNull] stParser.ArrayConformDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayConformand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayConformand([NotNull] stParser.ArrayConformandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.arrayVarDeclarationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayVarDeclarationInit([NotNull] stParser.ArrayVarDeclarationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructTypeDeclaration([NotNull] stParser.StructTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructTypeName([NotNull] stParser.StructTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structTypeSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructTypeSpecification([NotNull] stParser.StructTypeSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDeclaration([NotNull] stParser.StructDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structElementDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructElementDeclaration([NotNull] stParser.StructElementDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structElementName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructElementName([NotNull] stParser.StructElementNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.locatedAt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocatedAt([NotNull] stParser.LocatedAtContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.relativeAddress"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelativeAddress([NotNull] stParser.RelativeAddressContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.partlySpecifiedAddress"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPartlySpecifiedAddress([NotNull] stParser.PartlySpecifiedAddressContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.multibitPartAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultibitPartAccess([NotNull] stParser.MultibitPartAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructSpecificationInit([NotNull] stParser.StructSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructSpecification([NotNull] stParser.StructSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructTypeAccess([NotNull] stParser.StructTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructInit([NotNull] stParser.StructInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structElementInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructElementInit([NotNull] stParser.StructElementInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.structVarDeclarationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructVarDeclarationInit([NotNull] stParser.StructVarDeclarationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringTypeDeclaration([NotNull] stParser.StringTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringDerivedTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringDerivedTypeName([NotNull] stParser.StringDerivedTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringTypeAccess([NotNull] stParser.StringTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.referenceTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferenceTypeDeclaration([NotNull] stParser.ReferenceTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.referenceTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferenceTypeName([NotNull] stParser.ReferenceTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.referenceSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferenceSpecificationInit([NotNull] stParser.ReferenceSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.referenceSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferenceSpecification([NotNull] stParser.ReferenceSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.referenceValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferenceValue([NotNull] stParser.ReferenceValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.referenceAddress"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferenceAddress([NotNull] stParser.ReferenceAddressContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.referenceTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferenceTypeAccess([NotNull] stParser.ReferenceTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.referenceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReferenceName([NotNull] stParser.ReferenceNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dereference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDereference([NotNull] stParser.DereferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBlockDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockDeclaration([NotNull] stParser.FunctionBlockDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBlockName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockName([NotNull] stParser.FunctionBlockNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBlockInstanceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockInstanceName([NotNull] stParser.FunctionBlockInstanceNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBlockTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockTypeAccess([NotNull] stParser.FunctionBlockTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBlockTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockTypeName([NotNull] stParser.FunctionBlockTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBlockBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockBody([NotNull] stParser.FunctionBlockBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBlockVarDeclarationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockVarDeclarationInit([NotNull] stParser.FunctionBlockVarDeclarationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBlockVarSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockVarSpecificationInit([NotNull] stParser.FunctionBlockVarSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodDeclaration([NotNull] stParser.MethodDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodName([NotNull] stParser.MethodNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dataTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataTypeAccess([NotNull] stParser.DataTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.derivedTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDerivedTypeAccess([NotNull] stParser.DerivedTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] stParser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.symbolicVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSymbolicVariable([NotNull] stParser.SymbolicVariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.variableAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableAccess([NotNull] stParser.VariableAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.variableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableName([NotNull] stParser.VariableNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.variableElementSelect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableElementSelect([NotNull] stParser.VariableElementSelectContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subscriptList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubscriptList([NotNull] stParser.SubscriptListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.ioVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIoVarDeclarations([NotNull] stParser.IoVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.inputVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputVarDeclarations([NotNull] stParser.InputVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.inputVarDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputVarDeclaration([NotNull] stParser.InputVarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.edgeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEdgeDeclaration([NotNull] stParser.EdgeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.varDeclarationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarDeclarationInit([NotNull] stParser.VarDeclarationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.variableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableList([NotNull] stParser.VariableListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.outputVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputVarDeclarations([NotNull] stParser.OutputVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.outputVarDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputVarDeclaration([NotNull] stParser.OutputVarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.inOutVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInOutVarDeclarations([NotNull] stParser.InOutVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.inOutVarDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInOutVarDeclaration([NotNull] stParser.InOutVarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.normalVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNormalVarDeclarations([NotNull] stParser.NormalVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.otherVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOtherVarDeclarations([NotNull] stParser.OtherVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.nonRetainVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNonRetainVarDeclarations([NotNull] stParser.NonRetainVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.retainVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRetainVarDeclarations([NotNull] stParser.RetainVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.locatedPartlyVarDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocatedPartlyVarDeclaration([NotNull] stParser.LocatedPartlyVarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.locatedPartlyVar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocatedPartlyVar([NotNull] stParser.LocatedPartlyVarContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.varSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarSpecification([NotNull] stParser.VarSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.locatedVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocatedVarDeclarations([NotNull] stParser.LocatedVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.locatedVarDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocatedVarDeclaration([NotNull] stParser.LocatedVarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.tempVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTempVarDeclarations([NotNull] stParser.TempVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.externalVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalVarDeclarations([NotNull] stParser.ExternalVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.externalDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExternalDeclaration([NotNull] stParser.ExternalDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.globalVarName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVarName([NotNull] stParser.GlobalVarNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.globalVarDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVarDeclarations([NotNull] stParser.GlobalVarDeclarationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.globalVarDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVarDeclaration([NotNull] stParser.GlobalVarDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.globalVarSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVarSpecification([NotNull] stParser.GlobalVarSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.locatedVarSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocatedVarSpecificationInit([NotNull] stParser.LocatedVarSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringVarDeclarationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringVarDeclarationInit([NotNull] stParser.StringVarDeclarationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringSpecificationInit([NotNull] stParser.StringSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringSpecification([NotNull] stParser.StringSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.stringInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringInit([NotNull] stParser.StringInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] stParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBody([NotNull] stParser.FunctionBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclaration([NotNull] stParser.ClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.classTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassTypeName([NotNull] stParser.ClassTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.classTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassTypeAccess([NotNull] stParser.ClassTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassName([NotNull] stParser.ClassNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.classInstanceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassInstanceName([NotNull] stParser.ClassInstanceNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.accessSpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessSpecification([NotNull] stParser.AccessSpecificationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.interfaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceDeclaration([NotNull] stParser.InterfaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.interfaceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceName([NotNull] stParser.InterfaceNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.interfaceTypeList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceTypeList([NotNull] stParser.InterfaceTypeListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.interfaceTypeAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceTypeAccess([NotNull] stParser.InterfaceTypeAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.methodPrototype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodPrototype([NotNull] stParser.MethodPrototypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.interfaceVarDeclarationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceVarDeclarationInit([NotNull] stParser.InterfaceVarDeclarationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.interfaceSpecificationInit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceSpecificationInit([NotNull] stParser.InterfaceSpecificationInitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.interfaceValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceValue([NotNull] stParser.InterfaceValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] stParser.StatementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] stParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignStatement([NotNull] stParser.AssignStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.assignOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignOperator([NotNull] stParser.AssignOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.subprogControlStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubprogControlStatement([NotNull] stParser.SubprogControlStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] stParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionAccess([NotNull] stParser.FunctionAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionName([NotNull] stParser.FunctionNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.invocationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInvocationStatement([NotNull] stParser.InvocationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.parameterAssign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterAssign([NotNull] stParser.ParameterAssignContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.superCallStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSuperCallStatement([NotNull] stParser.SuperCallStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] stParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSelectionStatement([NotNull] stParser.SelectionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] stParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseStatement([NotNull] stParser.CaseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.caseSelection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseSelection([NotNull] stParser.CaseSelectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.caseList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseList([NotNull] stParser.CaseListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.caseListElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseListElement([NotNull] stParser.CaseListElementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatement([NotNull] stParser.LoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] stParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.controlVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitControlVariable([NotNull] stParser.ControlVariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.forRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForRange([NotNull] stParser.ForRangeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] stParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.repeatStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRepeatStatement([NotNull] stParser.RepeatStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>primaryExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpression([NotNull] stParser.PrimaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>orExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpression([NotNull] stParser.OrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>andExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpression([NotNull] stParser.AndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exponentExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExponentExpression([NotNull] stParser.ExponentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>addSubExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSubExpression([NotNull] stParser.AddSubExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>xorExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitXorExpression([NotNull] stParser.XorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonExpression([NotNull] stParser.ComparisonExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bracketedExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBracketedExpression([NotNull] stParser.BracketedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>derefExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDerefExpression([NotNull] stParser.DerefExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unaryExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] stParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcCallExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncCallExpression([NotNull] stParser.FuncCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multDivModExpression</c>
	/// labeled alternative in <see cref="stParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultDivModExpression([NotNull] stParser.MultDivModExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryOperator([NotNull] stParser.UnaryOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.signOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSignOperator([NotNull] stParser.SignOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.exponentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExponentOperator([NotNull] stParser.ExponentOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.multDivModOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultDivModOperator([NotNull] stParser.MultDivModOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.addSubOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddSubOperator([NotNull] stParser.AddSubOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOperator([NotNull] stParser.ComparisonOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.andOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndOperator([NotNull] stParser.AndOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.xorOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitXorOperator([NotNull] stParser.XorOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.orOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrOperator([NotNull] stParser.OrOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.exitStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExitStatement([NotNull] stParser.ExitStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] stParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.variableValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableValue([NotNull] stParser.VariableValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.literalValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralValue([NotNull] stParser.LiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.intLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntLiteral([NotNull] stParser.IntLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.intLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntLiteralValue([NotNull] stParser.IntLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.intTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntTypeName([NotNull] stParser.IntTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.multibitsLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultibitsLiteral([NotNull] stParser.MultibitsLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.multibitsLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultibitsLiteralValue([NotNull] stParser.MultibitsLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.multibitsTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultibitsTypeName([NotNull] stParser.MultibitsTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.realLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRealLiteral([NotNull] stParser.RealLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.realLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRealLiteralValue([NotNull] stParser.RealLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.realTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRealTypeName([NotNull] stParser.RealTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.boolLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolLiteral([NotNull] stParser.BoolLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.boolLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolLiteralValue([NotNull] stParser.BoolLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.boolTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolTypeName([NotNull] stParser.BoolTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.charLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharLiteral([NotNull] stParser.CharLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.charString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharString([NotNull] stParser.CharStringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.charStringTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharStringTypeName([NotNull] stParser.CharStringTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.timeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeLiteral([NotNull] stParser.TimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.durationLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDurationLiteral([NotNull] stParser.DurationLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.durationLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDurationLiteralValue([NotNull] stParser.DurationLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.durationTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDurationTypeName([NotNull] stParser.DurationTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.timeOfDayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeOfDayLiteral([NotNull] stParser.TimeOfDayLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.timeOfDayLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeOfDayLiteralValue([NotNull] stParser.TimeOfDayLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.timeOfDayTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTimeOfDayTypeName([NotNull] stParser.TimeOfDayTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateLiteral([NotNull] stParser.DateLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateLiteralValue([NotNull] stParser.DateLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateTypeName([NotNull] stParser.DateTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateAndTimeLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateAndTimeLiteral([NotNull] stParser.DateAndTimeLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateAndTimeLiteralValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateAndTimeLiteralValue([NotNull] stParser.DateAndTimeLiteralValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.dateAndTimeTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDateAndTimeTypeName([NotNull] stParser.DateAndTimeTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="stParser.directVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDirectVariable([NotNull] stParser.DirectVariableContext context);
}
