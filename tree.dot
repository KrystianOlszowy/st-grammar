digraph ParseTree {
node [shape=box, style=filled, color=".7 .3 1.0"];
node0 [label="file"];
node1 [label="dataTypeDeclaration"];
node0 -> node1;
node2 [label="TYPE"];
node1 -> node2;
node3 [label="typeDeclaration"];
node1 -> node3;
node4 [label="structTypeDeclaration"];
node3 -> node4;
node5 [label="structTypeName"];
node4 -> node5;
node6 [label="RobotConfig"];
node5 -> node6;
node7 [label=":"];
node4 -> node7;
node8 [label="structTypeSpecification"];
node4 -> node8;
node9 [label="structDeclaration"];
node8 -> node9;
node10 [label="STRUCT"];
node9 -> node10;
node11 [label="structElementDeclaration"];
node9 -> node11;
node12 [label="structElementName"];
node11 -> node12;
node13 [label="Name"];
node12 -> node13;
node14 [label=":"];
node11 -> node14;
node15 [label="simpleSpecificationInit"];
node11 -> node15;
node16 [label="simpleSpecification"];
node15 -> node16;
node17 [label="elementaryTypeName"];
node16 -> node17;
node18 [label="stringTypeName"];
node17 -> node18;
node19 [label="STRING"];
node18 -> node19;
node20 [label="["];
node18 -> node20;
node21 [label="stringSize"];
node18 -> node21;
node22 [label="20"];
node21 -> node22;
node23 [label="]"];
node18 -> node23;
node24 [label=":="];
node15 -> node24;
node25 [label="simpleInit"];
node15 -> node25;
node26 [label="expression"];
node25 -> node26;
node27 [label="literalValue"];
node26 -> node27;
node28 [label="charLiteral"];
node27 -> node28;
node29 [label="charString"];
node28 -> node29;
node30 [label="'Default'"];
node29 -> node30;
node31 [label=";"];
node9 -> node31;
node32 [label="structElementDeclaration"];
node9 -> node32;
node33 [label="structElementName"];
node32 -> node33;
node34 [label="Enabled"];
node33 -> node34;
node35 [label=":"];
node32 -> node35;
node36 [label="simpleSpecificationInit"];
node32 -> node36;
node37 [label="simpleSpecification"];
node36 -> node37;
node38 [label="elementaryTypeName"];
node37 -> node38;
node39 [label="boolTypeName"];
node38 -> node39;
node40 [label="BOOL"];
node39 -> node40;
node41 [label=":="];
node36 -> node41;
node42 [label="simpleInit"];
node36 -> node42;
node43 [label="expression"];
node42 -> node43;
node44 [label="literalValue"];
node43 -> node44;
node45 [label="boolLiteral"];
node44 -> node45;
node46 [label="boolLiteralValue"];
node45 -> node46;
node47 [label="TRUE"];
node46 -> node47;
node48 [label=";"];
node9 -> node48;
node49 [label="structElementDeclaration"];
node9 -> node49;
node50 [label="structElementName"];
node49 -> node50;
node51 [label="Speed"];
node50 -> node51;
node52 [label=":"];
node49 -> node52;
node53 [label="simpleSpecificationInit"];
node49 -> node53;
node54 [label="simpleSpecification"];
node53 -> node54;
node55 [label="elementaryTypeName"];
node54 -> node55;
node56 [label="intTypeName"];
node55 -> node56;
node57 [label="INT"];
node56 -> node57;
node58 [label=":="];
node53 -> node58;
node59 [label="simpleInit"];
node53 -> node59;
node60 [label="expression"];
node59 -> node60;
node61 [label="literalValue"];
node60 -> node61;
node62 [label="intLiteral"];
node61 -> node62;
node63 [label="intLiteralValue"];
node62 -> node63;
node64 [label="100"];
node63 -> node64;
node65 [label=";"];
node9 -> node65;
node66 [label="structElementDeclaration"];
node9 -> node66;
node67 [label="structElementName"];
node66 -> node67;
node68 [label="Limits"];
node67 -> node68;
node69 [label=":"];
node66 -> node69;
node70 [label="arraySpecificationInit"];
node66 -> node70;
node71 [label="arraySpecification"];
node70 -> node71;
node72 [label="ARRAY"];
node71 -> node72;
node73 [label="["];
node71 -> node73;
node74 [label="subrange"];
node71 -> node74;
node75 [label="subrangeBegin"];
node74 -> node75;
node76 [label="expression"];
node75 -> node76;
node77 [label="literalValue"];
node76 -> node77;
node78 [label="intLiteral"];
node77 -> node78;
node79 [label="intLiteralValue"];
node78 -> node79;
node80 [label="1"];
node79 -> node80;
node81 [label=".."];
node74 -> node81;
node82 [label="subrangeEnd"];
node74 -> node82;
node83 [label="expression"];
node82 -> node83;
node84 [label="literalValue"];
node83 -> node84;
node85 [label="intLiteral"];
node84 -> node85;
node86 [label="intLiteralValue"];
node85 -> node86;
node87 [label="3"];
node86 -> node87;
node88 [label="]"];
node71 -> node88;
node89 [label="OF"];
node71 -> node89;
node90 [label="dataTypeAccess"];
node71 -> node90;
node91 [label="elementaryTypeName"];
node90 -> node91;
node92 [label="intTypeName"];
node91 -> node92;
node93 [label="INT"];
node92 -> node93;
node94 [label=":="];
node70 -> node94;
node95 [label="arrayInit"];
node70 -> node95;
node96 [label="["];
node95 -> node96;
node97 [label="arrayElementInit"];
node95 -> node97;
node98 [label="arrayElementInitValue"];
node97 -> node98;
node99 [label="expression"];
node98 -> node99;
node100 [label="literalValue"];
node99 -> node100;
node101 [label="intLiteral"];
node100 -> node101;
node102 [label="intLiteralValue"];
node101 -> node102;
node103 [label="100"];
node102 -> node103;
node104 [label=","];
node95 -> node104;
node105 [label="arrayElementInit"];
node95 -> node105;
node106 [label="arrayElementMultiplier"];
node105 -> node106;
node107 [label="2"];
node106 -> node107;
node108 [label="("];
node105 -> node108;
node109 [label="arrayElementInitValue"];
node105 -> node109;
node110 [label="expression"];
node109 -> node110;
node111 [label="literalValue"];
node110 -> node111;
node112 [label="intLiteral"];
node111 -> node112;
node113 [label="intLiteralValue"];
node112 -> node113;
node114 [label="200"];
node113 -> node114;
node115 [label=")"];
node105 -> node115;
node116 [label="]"];
node95 -> node116;
node117 [label=";"];
node9 -> node117;
node118 [label="END_STRUCT"];
node9 -> node118;
node119 [label=";"];
node1 -> node119;
node120 [label="END_TYPE"];
node1 -> node120;
}
