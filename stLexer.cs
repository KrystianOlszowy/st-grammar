//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/kryst/Desktop/Praca magisterska/st-grammar/st.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class stLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, PROGRAM=24, 
		END_PROGRAM=25, DIRECT_VARIABLE=26, SINGLE_BYTE_STRING=27, DOUBLE_BYTE_STRING=28, 
		DURATION=29, DATE_TIME_VALUE=30, DATE_VALUE=31, CLOCK_TIME=32, GENERAL_REAL=33, 
		SIGNED_INT=34, UNSIGNED_INT=35, BINARY_INT=36, OCTAL_INT=37, HEX_INT=38, 
		BOOLEAN=39, USINT=40, UINT=41, UDINT=42, ULINT=43, SINT=44, INT=45, DINT=46, 
		LINT=47, REAL=48, LREAL=49, BYTE=50, WORD=51, DWORD=52, LWORD=53, BOOL=54, 
		FALSE=55, TRUE=56, STRING=57, WSTRING=58, CHAR=59, WCHAR=60, TIME=61, 
		LTIME=62, TIME_OF_DAY=63, LTIME_OF_DAY=64, DATE=65, LDATE=66, DATE_AND_TIME=67, 
		LDATE_AND_TIME=68, TYPE=69, END_TYPE=70, ARRAY=71, OF=72, STRUCT=73, OVERLAP=74, 
		END_STRUCT=75, AT=76, REF_TO=77, REF=78, NULL=79, DOT=80, PERCENT=81, 
		IDENTIFIER=82, PRAGMA=83, LINE_COMMENT=84, SLASH_COMMENT=85, BRACE_COMMENT=86, 
		WHITESPACE=87;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "PROGRAM", "END_PROGRAM", 
		"DIRECT_VARIABLE", "SINGLE_BYTE_STRING", "DOUBLE_BYTE_STRING", "DURATION", 
		"DATE_TIME_VALUE", "DATE_VALUE", "CLOCK_TIME", "GENERAL_REAL", "SIGNED_INT", 
		"UNSIGNED_INT", "BINARY_INT", "OCTAL_INT", "HEX_INT", "BOOLEAN", "USINT", 
		"UINT", "UDINT", "ULINT", "SINT", "INT", "DINT", "LINT", "REAL", "LREAL", 
		"BYTE", "WORD", "DWORD", "LWORD", "BOOL", "FALSE", "TRUE", "STRING", "WSTRING", 
		"CHAR", "WCHAR", "TIME", "LTIME", "TIME_OF_DAY", "LTIME_OF_DAY", "DATE", 
		"LDATE", "DATE_AND_TIME", "LDATE_AND_TIME", "TYPE", "END_TYPE", "ARRAY", 
		"OF", "STRUCT", "OVERLAP", "END_STRUCT", "AT", "REF_TO", "REF", "NULL", 
		"DOT", "PERCENT", "NON_DIGIT", "DIGIT", "BIT", "OCTAL_DIGIT", "HEX_DIGIT", 
		"SINGLE_BYTE_CHAR", "DOUBLE_BYTE_CHAR", "COMMON_CHAR", "TWO_CHAR_COMMON", 
		"DURATION_UNIT", "IDENTIFIER", "PRAGMA", "LINE_COMMENT", "SLASH_COMMENT", 
		"BRACE_COMMENT", "WHITESPACE"
	};


	public stLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public stLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "':'", "':='", "'('", "')'", "'..'", "','", "'#'", "'['", 
		"']'", "'X'", "'B'", "'W'", "'D'", "'L'", "'^'", "'T'", "'LT'", "'TOD'", 
		"'LTOD'", "'LD'", "'DT'", "'LDT'", "'PROGRAM'", "'END_PROGRAM'", null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, "'USINT'", "'UINT'", "'UDINT'", "'ULINT'", "'SINT'", "'INT'", "'DINT'", 
		"'LINT'", "'REAL'", "'LREAL'", "'BYTE'", "'WORD'", "'DWORD'", "'LWORD'", 
		"'BOOL'", "'FALSE'", "'TRUE'", "'STRING'", "'WSTRING'", "'CHAR'", "'WCHAR'", 
		"'TIME'", "'LTIME'", "'TIME_OF_DAY'", "'LTIME_OF_DAY'", "'DATE'", "'LDATE'", 
		"'DATE_AND_TIME'", "'LDATE_AND_TIME'", "'TYPE'", "'END_TYPE'", "'ARRAY'", 
		"'OF'", "'STRUCT'", "'OVERLAP'", "'END_STRUCT'", "'AT'", "'REF_TO'", "'REF'", 
		"'NULL'", "'.'", "'%'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"PROGRAM", "END_PROGRAM", "DIRECT_VARIABLE", "SINGLE_BYTE_STRING", "DOUBLE_BYTE_STRING", 
		"DURATION", "DATE_TIME_VALUE", "DATE_VALUE", "CLOCK_TIME", "GENERAL_REAL", 
		"SIGNED_INT", "UNSIGNED_INT", "BINARY_INT", "OCTAL_INT", "HEX_INT", "BOOLEAN", 
		"USINT", "UINT", "UDINT", "ULINT", "SINT", "INT", "DINT", "LINT", "REAL", 
		"LREAL", "BYTE", "WORD", "DWORD", "LWORD", "BOOL", "FALSE", "TRUE", "STRING", 
		"WSTRING", "CHAR", "WCHAR", "TIME", "LTIME", "TIME_OF_DAY", "LTIME_OF_DAY", 
		"DATE", "LDATE", "DATE_AND_TIME", "LDATE_AND_TIME", "TYPE", "END_TYPE", 
		"ARRAY", "OF", "STRUCT", "OVERLAP", "END_STRUCT", "AT", "REF_TO", "REF", 
		"NULL", "DOT", "PERCENT", "IDENTIFIER", "PRAGMA", "LINE_COMMENT", "SLASH_COMMENT", 
		"BRACE_COMMENT", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "st.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static stLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,87,823,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,1,0,1,0,1,1,1,1,
		1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,
		9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,
		1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,
		1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
		1,25,1,25,3,25,276,8,25,1,25,3,25,279,8,25,1,25,1,25,1,25,1,25,5,25,285,
		8,25,10,25,12,25,288,9,25,3,25,290,8,25,1,26,1,26,5,26,294,8,26,10,26,
		12,26,297,9,26,1,26,1,26,1,27,1,27,5,27,303,8,27,10,27,12,27,306,9,27,
		1,27,1,27,1,28,3,28,311,8,28,1,28,4,28,314,8,28,11,28,12,28,315,1,28,1,
		28,3,28,320,8,28,4,28,322,8,28,11,28,12,28,323,1,28,4,28,327,8,28,11,28,
		12,28,328,1,28,1,28,4,28,333,8,28,11,28,12,28,334,3,28,337,8,28,1,28,1,
		28,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
		30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,3,32,367,
		8,32,1,32,1,32,1,32,1,32,1,32,1,32,3,32,375,8,32,3,32,377,8,32,1,33,1,
		33,1,33,1,34,1,34,3,34,384,8,34,1,34,5,34,387,8,34,10,34,12,34,390,9,34,
		1,35,1,35,1,35,1,35,3,35,396,8,35,1,35,4,35,399,8,35,11,35,12,35,400,1,
		36,1,36,1,36,1,36,3,36,407,8,36,1,36,4,36,410,8,36,11,36,12,36,411,1,37,
		1,37,1,37,1,37,1,37,3,37,419,8,37,1,37,4,37,422,8,37,11,37,12,37,423,1,
		38,1,38,3,38,428,8,38,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,
		1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,
		1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,
		1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,
		1,48,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,
		1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,
		1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,
		1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,
		1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,
		1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,
		1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
		1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,
		1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,
		1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,
		1,67,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,
		1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,72,1,72,1,72,1,72,
		1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,
		1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,76,1,76,1,76,
		1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,79,
		1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,83,1,84,1,84,1,85,1,85,1,86,
		1,86,1,86,1,86,1,86,1,86,1,86,1,86,3,86,713,8,86,1,87,1,87,1,87,1,87,1,
		87,1,87,1,87,1,87,1,87,1,87,3,87,725,8,87,1,88,1,88,1,88,1,88,1,88,3,88,
		732,8,88,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,3,
		89,746,8,89,1,90,1,90,1,90,1,90,1,90,1,90,1,90,3,90,755,8,90,1,91,1,91,
		1,91,5,91,760,8,91,10,91,12,91,763,9,91,1,92,1,92,5,92,767,8,92,10,92,
		12,92,770,9,92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,5,93,780,8,93,10,
		93,12,93,783,9,93,1,93,1,93,1,94,1,94,1,94,1,94,1,94,5,94,792,8,94,10,
		94,12,94,795,9,94,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,5,
		95,807,8,95,10,95,12,95,810,9,95,1,95,1,95,1,95,1,95,1,95,1,96,4,96,818,
		8,96,11,96,12,96,819,1,96,1,96,3,768,793,808,0,97,1,1,3,2,5,3,7,4,9,5,
		11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
		18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
		30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,
		42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,
		107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,63,
		127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,73,
		147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,0,165,0,167,
		0,169,0,171,0,173,0,175,0,177,0,179,0,181,0,183,82,185,83,187,84,189,85,
		191,86,193,87,1,0,13,3,0,73,73,77,77,81,81,5,0,42,42,66,66,68,68,76,76,
		87,88,2,0,43,43,45,45,3,0,65,90,95,95,97,122,1,0,48,57,1,0,48,49,1,0,48,
		55,3,0,48,57,65,70,97,102,4,0,32,33,35,35,37,38,40,47,3,0,58,64,91,96,
		123,126,4,0,68,68,72,72,77,77,83,83,2,0,10,10,13,13,3,0,9,10,13,13,32,
		32,864,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
		1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
		0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
		1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
		0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,
		1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,
		0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,
		1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,
		0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,
		1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,
		1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,
		1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,
		1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,
		1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,
		1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,
		1,0,0,0,0,161,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,0,0,0,189,
		1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,1,195,1,0,0,0,3,197,1,0,0,0,5,199,
		1,0,0,0,7,202,1,0,0,0,9,204,1,0,0,0,11,206,1,0,0,0,13,209,1,0,0,0,15,211,
		1,0,0,0,17,213,1,0,0,0,19,215,1,0,0,0,21,217,1,0,0,0,23,219,1,0,0,0,25,
		221,1,0,0,0,27,223,1,0,0,0,29,225,1,0,0,0,31,227,1,0,0,0,33,229,1,0,0,
		0,35,231,1,0,0,0,37,234,1,0,0,0,39,238,1,0,0,0,41,243,1,0,0,0,43,246,1,
		0,0,0,45,249,1,0,0,0,47,253,1,0,0,0,49,261,1,0,0,0,51,273,1,0,0,0,53,291,
		1,0,0,0,55,300,1,0,0,0,57,310,1,0,0,0,59,340,1,0,0,0,61,344,1,0,0,0,63,
		355,1,0,0,0,65,366,1,0,0,0,67,378,1,0,0,0,69,381,1,0,0,0,71,391,1,0,0,
		0,73,402,1,0,0,0,75,413,1,0,0,0,77,427,1,0,0,0,79,429,1,0,0,0,81,435,1,
		0,0,0,83,440,1,0,0,0,85,446,1,0,0,0,87,452,1,0,0,0,89,457,1,0,0,0,91,461,
		1,0,0,0,93,466,1,0,0,0,95,471,1,0,0,0,97,476,1,0,0,0,99,482,1,0,0,0,101,
		487,1,0,0,0,103,492,1,0,0,0,105,498,1,0,0,0,107,504,1,0,0,0,109,509,1,
		0,0,0,111,515,1,0,0,0,113,520,1,0,0,0,115,527,1,0,0,0,117,535,1,0,0,0,
		119,540,1,0,0,0,121,546,1,0,0,0,123,551,1,0,0,0,125,557,1,0,0,0,127,569,
		1,0,0,0,129,582,1,0,0,0,131,587,1,0,0,0,133,593,1,0,0,0,135,607,1,0,0,
		0,137,622,1,0,0,0,139,627,1,0,0,0,141,636,1,0,0,0,143,642,1,0,0,0,145,
		645,1,0,0,0,147,652,1,0,0,0,149,660,1,0,0,0,151,671,1,0,0,0,153,674,1,
		0,0,0,155,681,1,0,0,0,157,685,1,0,0,0,159,690,1,0,0,0,161,692,1,0,0,0,
		163,694,1,0,0,0,165,696,1,0,0,0,167,698,1,0,0,0,169,700,1,0,0,0,171,702,
		1,0,0,0,173,712,1,0,0,0,175,724,1,0,0,0,177,731,1,0,0,0,179,745,1,0,0,
		0,181,754,1,0,0,0,183,756,1,0,0,0,185,764,1,0,0,0,187,775,1,0,0,0,189,
		786,1,0,0,0,191,801,1,0,0,0,193,817,1,0,0,0,195,196,5,59,0,0,196,2,1,0,
		0,0,197,198,5,58,0,0,198,4,1,0,0,0,199,200,5,58,0,0,200,201,5,61,0,0,201,
		6,1,0,0,0,202,203,5,40,0,0,203,8,1,0,0,0,204,205,5,41,0,0,205,10,1,0,0,
		0,206,207,5,46,0,0,207,208,5,46,0,0,208,12,1,0,0,0,209,210,5,44,0,0,210,
		14,1,0,0,0,211,212,5,35,0,0,212,16,1,0,0,0,213,214,5,91,0,0,214,18,1,0,
		0,0,215,216,5,93,0,0,216,20,1,0,0,0,217,218,5,88,0,0,218,22,1,0,0,0,219,
		220,5,66,0,0,220,24,1,0,0,0,221,222,5,87,0,0,222,26,1,0,0,0,223,224,5,
		68,0,0,224,28,1,0,0,0,225,226,5,76,0,0,226,30,1,0,0,0,227,228,5,94,0,0,
		228,32,1,0,0,0,229,230,5,84,0,0,230,34,1,0,0,0,231,232,5,76,0,0,232,233,
		5,84,0,0,233,36,1,0,0,0,234,235,5,84,0,0,235,236,5,79,0,0,236,237,5,68,
		0,0,237,38,1,0,0,0,238,239,5,76,0,0,239,240,5,84,0,0,240,241,5,79,0,0,
		241,242,5,68,0,0,242,40,1,0,0,0,243,244,5,76,0,0,244,245,5,68,0,0,245,
		42,1,0,0,0,246,247,5,68,0,0,247,248,5,84,0,0,248,44,1,0,0,0,249,250,5,
		76,0,0,250,251,5,68,0,0,251,252,5,84,0,0,252,46,1,0,0,0,253,254,5,80,0,
		0,254,255,5,82,0,0,255,256,5,79,0,0,256,257,5,71,0,0,257,258,5,82,0,0,
		258,259,5,65,0,0,259,260,5,77,0,0,260,48,1,0,0,0,261,262,5,69,0,0,262,
		263,5,78,0,0,263,264,5,68,0,0,264,265,5,95,0,0,265,266,5,80,0,0,266,267,
		5,82,0,0,267,268,5,79,0,0,268,269,5,71,0,0,269,270,5,82,0,0,270,271,5,
		65,0,0,271,272,5,77,0,0,272,50,1,0,0,0,273,275,3,161,80,0,274,276,7,0,
		0,0,275,274,1,0,0,0,275,276,1,0,0,0,276,278,1,0,0,0,277,279,7,1,0,0,278,
		277,1,0,0,0,278,279,1,0,0,0,279,289,1,0,0,0,280,286,3,69,34,0,281,282,
		3,159,79,0,282,283,3,69,34,0,283,285,1,0,0,0,284,281,1,0,0,0,285,288,1,
		0,0,0,286,284,1,0,0,0,286,287,1,0,0,0,287,290,1,0,0,0,288,286,1,0,0,0,
		289,280,1,0,0,0,289,290,1,0,0,0,290,52,1,0,0,0,291,295,5,39,0,0,292,294,
		3,173,86,0,293,292,1,0,0,0,294,297,1,0,0,0,295,293,1,0,0,0,295,296,1,0,
		0,0,296,298,1,0,0,0,297,295,1,0,0,0,298,299,5,39,0,0,299,54,1,0,0,0,300,
		304,5,34,0,0,301,303,3,175,87,0,302,301,1,0,0,0,303,306,1,0,0,0,304,302,
		1,0,0,0,304,305,1,0,0,0,305,307,1,0,0,0,306,304,1,0,0,0,307,308,5,34,0,
		0,308,56,1,0,0,0,309,311,7,2,0,0,310,309,1,0,0,0,310,311,1,0,0,0,311,321,
		1,0,0,0,312,314,3,165,82,0,313,312,1,0,0,0,314,315,1,0,0,0,315,313,1,0,
		0,0,315,316,1,0,0,0,316,317,1,0,0,0,317,319,3,181,90,0,318,320,5,95,0,
		0,319,318,1,0,0,0,319,320,1,0,0,0,320,322,1,0,0,0,321,313,1,0,0,0,322,
		323,1,0,0,0,323,321,1,0,0,0,323,324,1,0,0,0,324,326,1,0,0,0,325,327,3,
		165,82,0,326,325,1,0,0,0,327,328,1,0,0,0,328,326,1,0,0,0,328,329,1,0,0,
		0,329,336,1,0,0,0,330,332,3,159,79,0,331,333,3,165,82,0,332,331,1,0,0,
		0,333,334,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,335,337,1,0,0,0,336,
		330,1,0,0,0,336,337,1,0,0,0,337,338,1,0,0,0,338,339,3,181,90,0,339,58,
		1,0,0,0,340,341,3,61,30,0,341,342,5,45,0,0,342,343,3,63,31,0,343,60,1,
		0,0,0,344,345,3,165,82,0,345,346,3,165,82,0,346,347,3,165,82,0,347,348,
		3,165,82,0,348,349,5,45,0,0,349,350,3,165,82,0,350,351,3,165,82,0,351,
		352,5,45,0,0,352,353,3,165,82,0,353,354,3,165,82,0,354,62,1,0,0,0,355,
		356,3,165,82,0,356,357,3,165,82,0,357,358,5,58,0,0,358,359,3,165,82,0,
		359,360,3,165,82,0,360,361,5,58,0,0,361,362,3,69,34,0,362,363,3,159,79,
		0,363,364,3,69,34,0,364,64,1,0,0,0,365,367,7,2,0,0,366,365,1,0,0,0,366,
		367,1,0,0,0,367,368,1,0,0,0,368,369,3,69,34,0,369,370,3,159,79,0,370,376,
		3,69,34,0,371,374,5,69,0,0,372,375,3,67,33,0,373,375,3,69,34,0,374,372,
		1,0,0,0,374,373,1,0,0,0,375,377,1,0,0,0,376,371,1,0,0,0,376,377,1,0,0,
		0,377,66,1,0,0,0,378,379,7,2,0,0,379,380,3,69,34,0,380,68,1,0,0,0,381,
		388,3,165,82,0,382,384,5,95,0,0,383,382,1,0,0,0,383,384,1,0,0,0,384,385,
		1,0,0,0,385,387,3,165,82,0,386,383,1,0,0,0,387,390,1,0,0,0,388,386,1,0,
		0,0,388,389,1,0,0,0,389,70,1,0,0,0,390,388,1,0,0,0,391,392,5,50,0,0,392,
		393,5,35,0,0,393,398,1,0,0,0,394,396,5,95,0,0,395,394,1,0,0,0,395,396,
		1,0,0,0,396,397,1,0,0,0,397,399,3,167,83,0,398,395,1,0,0,0,399,400,1,0,
		0,0,400,398,1,0,0,0,400,401,1,0,0,0,401,72,1,0,0,0,402,403,5,56,0,0,403,
		404,5,35,0,0,404,409,1,0,0,0,405,407,5,95,0,0,406,405,1,0,0,0,406,407,
		1,0,0,0,407,408,1,0,0,0,408,410,3,169,84,0,409,406,1,0,0,0,410,411,1,0,
		0,0,411,409,1,0,0,0,411,412,1,0,0,0,412,74,1,0,0,0,413,414,5,49,0,0,414,
		415,5,54,0,0,415,416,5,35,0,0,416,421,1,0,0,0,417,419,5,95,0,0,418,417,
		1,0,0,0,418,419,1,0,0,0,419,420,1,0,0,0,420,422,3,171,85,0,421,418,1,0,
		0,0,422,423,1,0,0,0,423,421,1,0,0,0,423,424,1,0,0,0,424,76,1,0,0,0,425,
		428,3,109,54,0,426,428,3,111,55,0,427,425,1,0,0,0,427,426,1,0,0,0,428,
		78,1,0,0,0,429,430,5,85,0,0,430,431,5,83,0,0,431,432,5,73,0,0,432,433,
		5,78,0,0,433,434,5,84,0,0,434,80,1,0,0,0,435,436,5,85,0,0,436,437,5,73,
		0,0,437,438,5,78,0,0,438,439,5,84,0,0,439,82,1,0,0,0,440,441,5,85,0,0,
		441,442,5,68,0,0,442,443,5,73,0,0,443,444,5,78,0,0,444,445,5,84,0,0,445,
		84,1,0,0,0,446,447,5,85,0,0,447,448,5,76,0,0,448,449,5,73,0,0,449,450,
		5,78,0,0,450,451,5,84,0,0,451,86,1,0,0,0,452,453,5,83,0,0,453,454,5,73,
		0,0,454,455,5,78,0,0,455,456,5,84,0,0,456,88,1,0,0,0,457,458,5,73,0,0,
		458,459,5,78,0,0,459,460,5,84,0,0,460,90,1,0,0,0,461,462,5,68,0,0,462,
		463,5,73,0,0,463,464,5,78,0,0,464,465,5,84,0,0,465,92,1,0,0,0,466,467,
		5,76,0,0,467,468,5,73,0,0,468,469,5,78,0,0,469,470,5,84,0,0,470,94,1,0,
		0,0,471,472,5,82,0,0,472,473,5,69,0,0,473,474,5,65,0,0,474,475,5,76,0,
		0,475,96,1,0,0,0,476,477,5,76,0,0,477,478,5,82,0,0,478,479,5,69,0,0,479,
		480,5,65,0,0,480,481,5,76,0,0,481,98,1,0,0,0,482,483,5,66,0,0,483,484,
		5,89,0,0,484,485,5,84,0,0,485,486,5,69,0,0,486,100,1,0,0,0,487,488,5,87,
		0,0,488,489,5,79,0,0,489,490,5,82,0,0,490,491,5,68,0,0,491,102,1,0,0,0,
		492,493,5,68,0,0,493,494,5,87,0,0,494,495,5,79,0,0,495,496,5,82,0,0,496,
		497,5,68,0,0,497,104,1,0,0,0,498,499,5,76,0,0,499,500,5,87,0,0,500,501,
		5,79,0,0,501,502,5,82,0,0,502,503,5,68,0,0,503,106,1,0,0,0,504,505,5,66,
		0,0,505,506,5,79,0,0,506,507,5,79,0,0,507,508,5,76,0,0,508,108,1,0,0,0,
		509,510,5,70,0,0,510,511,5,65,0,0,511,512,5,76,0,0,512,513,5,83,0,0,513,
		514,5,69,0,0,514,110,1,0,0,0,515,516,5,84,0,0,516,517,5,82,0,0,517,518,
		5,85,0,0,518,519,5,69,0,0,519,112,1,0,0,0,520,521,5,83,0,0,521,522,5,84,
		0,0,522,523,5,82,0,0,523,524,5,73,0,0,524,525,5,78,0,0,525,526,5,71,0,
		0,526,114,1,0,0,0,527,528,5,87,0,0,528,529,5,83,0,0,529,530,5,84,0,0,530,
		531,5,82,0,0,531,532,5,73,0,0,532,533,5,78,0,0,533,534,5,71,0,0,534,116,
		1,0,0,0,535,536,5,67,0,0,536,537,5,72,0,0,537,538,5,65,0,0,538,539,5,82,
		0,0,539,118,1,0,0,0,540,541,5,87,0,0,541,542,5,67,0,0,542,543,5,72,0,0,
		543,544,5,65,0,0,544,545,5,82,0,0,545,120,1,0,0,0,546,547,5,84,0,0,547,
		548,5,73,0,0,548,549,5,77,0,0,549,550,5,69,0,0,550,122,1,0,0,0,551,552,
		5,76,0,0,552,553,5,84,0,0,553,554,5,73,0,0,554,555,5,77,0,0,555,556,5,
		69,0,0,556,124,1,0,0,0,557,558,5,84,0,0,558,559,5,73,0,0,559,560,5,77,
		0,0,560,561,5,69,0,0,561,562,5,95,0,0,562,563,5,79,0,0,563,564,5,70,0,
		0,564,565,5,95,0,0,565,566,5,68,0,0,566,567,5,65,0,0,567,568,5,89,0,0,
		568,126,1,0,0,0,569,570,5,76,0,0,570,571,5,84,0,0,571,572,5,73,0,0,572,
		573,5,77,0,0,573,574,5,69,0,0,574,575,5,95,0,0,575,576,5,79,0,0,576,577,
		5,70,0,0,577,578,5,95,0,0,578,579,5,68,0,0,579,580,5,65,0,0,580,581,5,
		89,0,0,581,128,1,0,0,0,582,583,5,68,0,0,583,584,5,65,0,0,584,585,5,84,
		0,0,585,586,5,69,0,0,586,130,1,0,0,0,587,588,5,76,0,0,588,589,5,68,0,0,
		589,590,5,65,0,0,590,591,5,84,0,0,591,592,5,69,0,0,592,132,1,0,0,0,593,
		594,5,68,0,0,594,595,5,65,0,0,595,596,5,84,0,0,596,597,5,69,0,0,597,598,
		5,95,0,0,598,599,5,65,0,0,599,600,5,78,0,0,600,601,5,68,0,0,601,602,5,
		95,0,0,602,603,5,84,0,0,603,604,5,73,0,0,604,605,5,77,0,0,605,606,5,69,
		0,0,606,134,1,0,0,0,607,608,5,76,0,0,608,609,5,68,0,0,609,610,5,65,0,0,
		610,611,5,84,0,0,611,612,5,69,0,0,612,613,5,95,0,0,613,614,5,65,0,0,614,
		615,5,78,0,0,615,616,5,68,0,0,616,617,5,95,0,0,617,618,5,84,0,0,618,619,
		5,73,0,0,619,620,5,77,0,0,620,621,5,69,0,0,621,136,1,0,0,0,622,623,5,84,
		0,0,623,624,5,89,0,0,624,625,5,80,0,0,625,626,5,69,0,0,626,138,1,0,0,0,
		627,628,5,69,0,0,628,629,5,78,0,0,629,630,5,68,0,0,630,631,5,95,0,0,631,
		632,5,84,0,0,632,633,5,89,0,0,633,634,5,80,0,0,634,635,5,69,0,0,635,140,
		1,0,0,0,636,637,5,65,0,0,637,638,5,82,0,0,638,639,5,82,0,0,639,640,5,65,
		0,0,640,641,5,89,0,0,641,142,1,0,0,0,642,643,5,79,0,0,643,644,5,70,0,0,
		644,144,1,0,0,0,645,646,5,83,0,0,646,647,5,84,0,0,647,648,5,82,0,0,648,
		649,5,85,0,0,649,650,5,67,0,0,650,651,5,84,0,0,651,146,1,0,0,0,652,653,
		5,79,0,0,653,654,5,86,0,0,654,655,5,69,0,0,655,656,5,82,0,0,656,657,5,
		76,0,0,657,658,5,65,0,0,658,659,5,80,0,0,659,148,1,0,0,0,660,661,5,69,
		0,0,661,662,5,78,0,0,662,663,5,68,0,0,663,664,5,95,0,0,664,665,5,83,0,
		0,665,666,5,84,0,0,666,667,5,82,0,0,667,668,5,85,0,0,668,669,5,67,0,0,
		669,670,5,84,0,0,670,150,1,0,0,0,671,672,5,65,0,0,672,673,5,84,0,0,673,
		152,1,0,0,0,674,675,5,82,0,0,675,676,5,69,0,0,676,677,5,70,0,0,677,678,
		5,95,0,0,678,679,5,84,0,0,679,680,5,79,0,0,680,154,1,0,0,0,681,682,5,82,
		0,0,682,683,5,69,0,0,683,684,5,70,0,0,684,156,1,0,0,0,685,686,5,78,0,0,
		686,687,5,85,0,0,687,688,5,76,0,0,688,689,5,76,0,0,689,158,1,0,0,0,690,
		691,5,46,0,0,691,160,1,0,0,0,692,693,5,37,0,0,693,162,1,0,0,0,694,695,
		7,3,0,0,695,164,1,0,0,0,696,697,7,4,0,0,697,166,1,0,0,0,698,699,7,5,0,
		0,699,168,1,0,0,0,700,701,7,6,0,0,701,170,1,0,0,0,702,703,7,7,0,0,703,
		172,1,0,0,0,704,713,3,177,88,0,705,706,5,36,0,0,706,713,5,39,0,0,707,713,
		5,34,0,0,708,709,5,36,0,0,709,710,3,171,85,0,710,711,3,171,85,0,711,713,
		1,0,0,0,712,704,1,0,0,0,712,705,1,0,0,0,712,707,1,0,0,0,712,708,1,0,0,
		0,713,174,1,0,0,0,714,725,3,177,88,0,715,725,5,39,0,0,716,717,5,36,0,0,
		717,725,5,34,0,0,718,719,5,36,0,0,719,720,3,171,85,0,720,721,3,171,85,
		0,721,722,3,171,85,0,722,723,3,171,85,0,723,725,1,0,0,0,724,714,1,0,0,
		0,724,715,1,0,0,0,724,716,1,0,0,0,724,718,1,0,0,0,725,176,1,0,0,0,726,
		732,7,8,0,0,727,732,3,165,82,0,728,732,3,163,81,0,729,732,7,9,0,0,730,
		732,3,179,89,0,731,726,1,0,0,0,731,727,1,0,0,0,731,728,1,0,0,0,731,729,
		1,0,0,0,731,730,1,0,0,0,732,178,1,0,0,0,733,734,5,36,0,0,734,746,5,36,
		0,0,735,736,5,36,0,0,736,746,5,76,0,0,737,738,5,36,0,0,738,746,5,78,0,
		0,739,740,5,36,0,0,740,746,5,80,0,0,741,742,5,36,0,0,742,746,5,82,0,0,
		743,744,5,36,0,0,744,746,5,84,0,0,745,733,1,0,0,0,745,735,1,0,0,0,745,
		737,1,0,0,0,745,739,1,0,0,0,745,741,1,0,0,0,745,743,1,0,0,0,746,180,1,
		0,0,0,747,755,7,10,0,0,748,749,5,77,0,0,749,755,5,83,0,0,750,751,5,85,
		0,0,751,755,5,83,0,0,752,753,5,78,0,0,753,755,5,83,0,0,754,747,1,0,0,0,
		754,748,1,0,0,0,754,750,1,0,0,0,754,752,1,0,0,0,755,182,1,0,0,0,756,761,
		3,163,81,0,757,760,3,163,81,0,758,760,3,165,82,0,759,757,1,0,0,0,759,758,
		1,0,0,0,760,763,1,0,0,0,761,759,1,0,0,0,761,762,1,0,0,0,762,184,1,0,0,
		0,763,761,1,0,0,0,764,768,5,123,0,0,765,767,9,0,0,0,766,765,1,0,0,0,767,
		770,1,0,0,0,768,769,1,0,0,0,768,766,1,0,0,0,769,771,1,0,0,0,770,768,1,
		0,0,0,771,772,5,125,0,0,772,773,1,0,0,0,773,774,6,92,0,0,774,186,1,0,0,
		0,775,776,5,47,0,0,776,777,5,47,0,0,777,781,1,0,0,0,778,780,8,11,0,0,779,
		778,1,0,0,0,780,783,1,0,0,0,781,779,1,0,0,0,781,782,1,0,0,0,782,784,1,
		0,0,0,783,781,1,0,0,0,784,785,6,93,0,0,785,188,1,0,0,0,786,787,5,47,0,
		0,787,788,5,42,0,0,788,793,1,0,0,0,789,792,3,189,94,0,790,792,9,0,0,0,
		791,789,1,0,0,0,791,790,1,0,0,0,792,795,1,0,0,0,793,794,1,0,0,0,793,791,
		1,0,0,0,794,796,1,0,0,0,795,793,1,0,0,0,796,797,5,42,0,0,797,798,5,47,
		0,0,798,799,1,0,0,0,799,800,6,94,0,0,800,190,1,0,0,0,801,802,5,40,0,0,
		802,803,5,42,0,0,803,808,1,0,0,0,804,807,3,191,95,0,805,807,9,0,0,0,806,
		804,1,0,0,0,806,805,1,0,0,0,807,810,1,0,0,0,808,809,1,0,0,0,808,806,1,
		0,0,0,809,811,1,0,0,0,810,808,1,0,0,0,811,812,5,42,0,0,812,813,5,41,0,
		0,813,814,1,0,0,0,814,815,6,95,0,0,815,192,1,0,0,0,816,818,7,12,0,0,817,
		816,1,0,0,0,818,819,1,0,0,0,819,817,1,0,0,0,819,820,1,0,0,0,820,821,1,
		0,0,0,821,822,6,96,0,0,822,194,1,0,0,0,40,0,275,278,286,289,295,304,310,
		315,319,323,328,334,336,366,374,376,383,388,395,400,406,411,418,423,427,
		712,724,731,745,754,759,761,768,781,791,793,806,808,819,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
