//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/kryst/Desktop/Praca magisterska/st-grammar/st.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class stLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		PROGRAM=1, END_PROGRAM=2, VAR=3, VAR_INPUT=4, VAR_OUTPUT=5, VAR_IN_OUT=6, 
		VAR_EXTERNAL=7, VAR_GLOBAL=8, VAR_ACCESS=9, VAR_TEMP=10, VAR_CONFIG=11, 
		RETAIN=12, NOT_RETAIN=13, CONSTANT=14, AT=15, END_VAR=16, BOOL=17, SINT=18, 
		INT=19, DINT=20, LINT=21, USINT=22, UINT=23, UDINT=24, ULINT=25, REAL=26, 
		LREAL=27, TIME=28, DATE=29, TIME_OF_DAY=30, DATE_AND_TIME=31, STRING=32, 
		BYTE=33, WORD=34, DWORD=35, LWORD=36, WSTRING=37, ANY=38, ANY_DERIVED=39, 
		ANY_ELEMENTARY=40, ANY_MAGNITUDE=41, ANY_NUM=42, ANY_REAL=43, ANY_INT=44, 
		ANY_BIT=45, ANY_STRING=46, ANY_DATE=47, TYPE=48, END_TYPE=49, ARRAY=50, 
		OF=51, STRUCT=52, LINE_COMMENT=53, COMMENT=54, WHITESPACE=55;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"PROGRAM", "END_PROGRAM", "VAR", "VAR_INPUT", "VAR_OUTPUT", "VAR_IN_OUT", 
		"VAR_EXTERNAL", "VAR_GLOBAL", "VAR_ACCESS", "VAR_TEMP", "VAR_CONFIG", 
		"RETAIN", "NOT_RETAIN", "CONSTANT", "AT", "END_VAR", "BOOL", "SINT", "INT", 
		"DINT", "LINT", "USINT", "UINT", "UDINT", "ULINT", "REAL", "LREAL", "TIME", 
		"DATE", "TIME_OF_DAY", "DATE_AND_TIME", "STRING", "BYTE", "WORD", "DWORD", 
		"LWORD", "WSTRING", "ANY", "ANY_DERIVED", "ANY_ELEMENTARY", "ANY_MAGNITUDE", 
		"ANY_NUM", "ANY_REAL", "ANY_INT", "ANY_BIT", "ANY_STRING", "ANY_DATE", 
		"TYPE", "END_TYPE", "ARRAY", "OF", "STRUCT", "LINE_COMMENT", "COMMENT", 
		"WHITESPACE"
	};


	public stLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public stLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'PROGRAM'", "'END_PROGRAM'", "'VAR'", "'VAR_INPUT'", "'VAR_OUTPUT'", 
		"'VAR_IN_OUT'", "'VAR_EXTERNAL'", "'VAR_GLOBAL'", "'VAR_ACCESS'", "'VAR_TEMP'", 
		"'VAR_CONFIG'", "'RETAIN'", "'NON_RETAIN'", "'CONSTANT'", "'AT'", "'END_VAR'", 
		"'BOOL'", "'SINT'", "'INT'", "'DINT'", "'LINT'", "'USINT'", "'UINT'", 
		"'UDINT'", "'ULINT'", "'REAL'", "'LREAL'", "'TIME'", "'DATE'", null, null, 
		"'STRING'", "'BYTE'", "'WORD'", "'DWORD'", "'LWORD'", "'WSTRING'", "'ANY'", 
		"'ANY_DERIVED'", "'ANY_ELEMENTARY'", "'ANY_MAGNITUDE'", "'ANY_NUM'", "'ANY_REAL'", 
		"'ANY_INT'", "'ANY_BIT'", "'ANY_STRING'", "'ANY_DATE'", "'TYPE'", "'END_TYPE'", 
		"'ARRAY'", "'OF'", "'STRUCT'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PROGRAM", "END_PROGRAM", "VAR", "VAR_INPUT", "VAR_OUTPUT", "VAR_IN_OUT", 
		"VAR_EXTERNAL", "VAR_GLOBAL", "VAR_ACCESS", "VAR_TEMP", "VAR_CONFIG", 
		"RETAIN", "NOT_RETAIN", "CONSTANT", "AT", "END_VAR", "BOOL", "SINT", "INT", 
		"DINT", "LINT", "USINT", "UINT", "UDINT", "ULINT", "REAL", "LREAL", "TIME", 
		"DATE", "TIME_OF_DAY", "DATE_AND_TIME", "STRING", "BYTE", "WORD", "DWORD", 
		"LWORD", "WSTRING", "ANY", "ANY_DERIVED", "ANY_ELEMENTARY", "ANY_MAGNITUDE", 
		"ANY_NUM", "ANY_REAL", "ANY_INT", "ANY_BIT", "ANY_STRING", "ANY_DATE", 
		"TYPE", "END_TYPE", "ARRAY", "OF", "STRUCT", "LINE_COMMENT", "COMMENT", 
		"WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "st.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static stLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,55,563,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,1,0,1,0,1,0,1,0,
		1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
		2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,
		1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
		6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,
		1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,
		9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,
		10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,
		12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,
		13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,
		16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,
		19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,
		21,1,21,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,
		24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,
		26,1,26,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,
		29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,3,29,343,8,29,
		1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
		1,30,3,30,360,8,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,
		32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,
		35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,
		37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
		38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,
		39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,
		40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,
		42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,
		44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,
		45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,
		47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,
		49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,
		51,1,52,1,52,1,52,1,52,5,52,531,8,52,10,52,12,52,534,9,52,1,52,3,52,537,
		8,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,5,53,547,8,53,10,53,12,53,
		550,9,53,1,53,1,53,1,53,1,53,1,53,1,54,4,54,558,8,54,11,54,12,54,559,1,
		54,1,54,2,532,548,0,55,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,
		11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
		23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,
		35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
		47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,1,0,1,3,0,9,10,
		13,13,32,32,568,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,
		0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
		0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
		1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
		0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
		1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
		0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
		1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,
		0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
		1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
		0,0,0,0,109,1,0,0,0,1,111,1,0,0,0,3,119,1,0,0,0,5,131,1,0,0,0,7,135,1,
		0,0,0,9,145,1,0,0,0,11,156,1,0,0,0,13,167,1,0,0,0,15,180,1,0,0,0,17,191,
		1,0,0,0,19,202,1,0,0,0,21,211,1,0,0,0,23,222,1,0,0,0,25,229,1,0,0,0,27,
		240,1,0,0,0,29,249,1,0,0,0,31,252,1,0,0,0,33,260,1,0,0,0,35,265,1,0,0,
		0,37,270,1,0,0,0,39,274,1,0,0,0,41,279,1,0,0,0,43,284,1,0,0,0,45,290,1,
		0,0,0,47,295,1,0,0,0,49,301,1,0,0,0,51,307,1,0,0,0,53,312,1,0,0,0,55,318,
		1,0,0,0,57,323,1,0,0,0,59,342,1,0,0,0,61,359,1,0,0,0,63,361,1,0,0,0,65,
		368,1,0,0,0,67,373,1,0,0,0,69,378,1,0,0,0,71,384,1,0,0,0,73,390,1,0,0,
		0,75,398,1,0,0,0,77,402,1,0,0,0,79,414,1,0,0,0,81,429,1,0,0,0,83,443,1,
		0,0,0,85,451,1,0,0,0,87,460,1,0,0,0,89,468,1,0,0,0,91,476,1,0,0,0,93,487,
		1,0,0,0,95,496,1,0,0,0,97,501,1,0,0,0,99,510,1,0,0,0,101,516,1,0,0,0,103,
		519,1,0,0,0,105,526,1,0,0,0,107,542,1,0,0,0,109,557,1,0,0,0,111,112,5,
		80,0,0,112,113,5,82,0,0,113,114,5,79,0,0,114,115,5,71,0,0,115,116,5,82,
		0,0,116,117,5,65,0,0,117,118,5,77,0,0,118,2,1,0,0,0,119,120,5,69,0,0,120,
		121,5,78,0,0,121,122,5,68,0,0,122,123,5,95,0,0,123,124,5,80,0,0,124,125,
		5,82,0,0,125,126,5,79,0,0,126,127,5,71,0,0,127,128,5,82,0,0,128,129,5,
		65,0,0,129,130,5,77,0,0,130,4,1,0,0,0,131,132,5,86,0,0,132,133,5,65,0,
		0,133,134,5,82,0,0,134,6,1,0,0,0,135,136,5,86,0,0,136,137,5,65,0,0,137,
		138,5,82,0,0,138,139,5,95,0,0,139,140,5,73,0,0,140,141,5,78,0,0,141,142,
		5,80,0,0,142,143,5,85,0,0,143,144,5,84,0,0,144,8,1,0,0,0,145,146,5,86,
		0,0,146,147,5,65,0,0,147,148,5,82,0,0,148,149,5,95,0,0,149,150,5,79,0,
		0,150,151,5,85,0,0,151,152,5,84,0,0,152,153,5,80,0,0,153,154,5,85,0,0,
		154,155,5,84,0,0,155,10,1,0,0,0,156,157,5,86,0,0,157,158,5,65,0,0,158,
		159,5,82,0,0,159,160,5,95,0,0,160,161,5,73,0,0,161,162,5,78,0,0,162,163,
		5,95,0,0,163,164,5,79,0,0,164,165,5,85,0,0,165,166,5,84,0,0,166,12,1,0,
		0,0,167,168,5,86,0,0,168,169,5,65,0,0,169,170,5,82,0,0,170,171,5,95,0,
		0,171,172,5,69,0,0,172,173,5,88,0,0,173,174,5,84,0,0,174,175,5,69,0,0,
		175,176,5,82,0,0,176,177,5,78,0,0,177,178,5,65,0,0,178,179,5,76,0,0,179,
		14,1,0,0,0,180,181,5,86,0,0,181,182,5,65,0,0,182,183,5,82,0,0,183,184,
		5,95,0,0,184,185,5,71,0,0,185,186,5,76,0,0,186,187,5,79,0,0,187,188,5,
		66,0,0,188,189,5,65,0,0,189,190,5,76,0,0,190,16,1,0,0,0,191,192,5,86,0,
		0,192,193,5,65,0,0,193,194,5,82,0,0,194,195,5,95,0,0,195,196,5,65,0,0,
		196,197,5,67,0,0,197,198,5,67,0,0,198,199,5,69,0,0,199,200,5,83,0,0,200,
		201,5,83,0,0,201,18,1,0,0,0,202,203,5,86,0,0,203,204,5,65,0,0,204,205,
		5,82,0,0,205,206,5,95,0,0,206,207,5,84,0,0,207,208,5,69,0,0,208,209,5,
		77,0,0,209,210,5,80,0,0,210,20,1,0,0,0,211,212,5,86,0,0,212,213,5,65,0,
		0,213,214,5,82,0,0,214,215,5,95,0,0,215,216,5,67,0,0,216,217,5,79,0,0,
		217,218,5,78,0,0,218,219,5,70,0,0,219,220,5,73,0,0,220,221,5,71,0,0,221,
		22,1,0,0,0,222,223,5,82,0,0,223,224,5,69,0,0,224,225,5,84,0,0,225,226,
		5,65,0,0,226,227,5,73,0,0,227,228,5,78,0,0,228,24,1,0,0,0,229,230,5,78,
		0,0,230,231,5,79,0,0,231,232,5,78,0,0,232,233,5,95,0,0,233,234,5,82,0,
		0,234,235,5,69,0,0,235,236,5,84,0,0,236,237,5,65,0,0,237,238,5,73,0,0,
		238,239,5,78,0,0,239,26,1,0,0,0,240,241,5,67,0,0,241,242,5,79,0,0,242,
		243,5,78,0,0,243,244,5,83,0,0,244,245,5,84,0,0,245,246,5,65,0,0,246,247,
		5,78,0,0,247,248,5,84,0,0,248,28,1,0,0,0,249,250,5,65,0,0,250,251,5,84,
		0,0,251,30,1,0,0,0,252,253,5,69,0,0,253,254,5,78,0,0,254,255,5,68,0,0,
		255,256,5,95,0,0,256,257,5,86,0,0,257,258,5,65,0,0,258,259,5,82,0,0,259,
		32,1,0,0,0,260,261,5,66,0,0,261,262,5,79,0,0,262,263,5,79,0,0,263,264,
		5,76,0,0,264,34,1,0,0,0,265,266,5,83,0,0,266,267,5,73,0,0,267,268,5,78,
		0,0,268,269,5,84,0,0,269,36,1,0,0,0,270,271,5,73,0,0,271,272,5,78,0,0,
		272,273,5,84,0,0,273,38,1,0,0,0,274,275,5,68,0,0,275,276,5,73,0,0,276,
		277,5,78,0,0,277,278,5,84,0,0,278,40,1,0,0,0,279,280,5,76,0,0,280,281,
		5,73,0,0,281,282,5,78,0,0,282,283,5,84,0,0,283,42,1,0,0,0,284,285,5,85,
		0,0,285,286,5,83,0,0,286,287,5,73,0,0,287,288,5,78,0,0,288,289,5,84,0,
		0,289,44,1,0,0,0,290,291,5,85,0,0,291,292,5,73,0,0,292,293,5,78,0,0,293,
		294,5,84,0,0,294,46,1,0,0,0,295,296,5,85,0,0,296,297,5,68,0,0,297,298,
		5,73,0,0,298,299,5,78,0,0,299,300,5,84,0,0,300,48,1,0,0,0,301,302,5,85,
		0,0,302,303,5,76,0,0,303,304,5,73,0,0,304,305,5,78,0,0,305,306,5,84,0,
		0,306,50,1,0,0,0,307,308,5,82,0,0,308,309,5,69,0,0,309,310,5,65,0,0,310,
		311,5,76,0,0,311,52,1,0,0,0,312,313,5,76,0,0,313,314,5,82,0,0,314,315,
		5,69,0,0,315,316,5,65,0,0,316,317,5,76,0,0,317,54,1,0,0,0,318,319,5,84,
		0,0,319,320,5,73,0,0,320,321,5,77,0,0,321,322,5,69,0,0,322,56,1,0,0,0,
		323,324,5,68,0,0,324,325,5,65,0,0,325,326,5,84,0,0,326,327,5,69,0,0,327,
		58,1,0,0,0,328,329,5,84,0,0,329,330,5,73,0,0,330,331,5,77,0,0,331,332,
		5,69,0,0,332,333,5,95,0,0,333,334,5,79,0,0,334,335,5,70,0,0,335,336,5,
		95,0,0,336,337,5,68,0,0,337,338,5,65,0,0,338,343,5,89,0,0,339,340,5,84,
		0,0,340,341,5,79,0,0,341,343,5,68,0,0,342,328,1,0,0,0,342,339,1,0,0,0,
		343,60,1,0,0,0,344,345,5,68,0,0,345,346,5,65,0,0,346,347,5,84,0,0,347,
		348,5,69,0,0,348,349,5,95,0,0,349,350,5,65,0,0,350,351,5,78,0,0,351,352,
		5,68,0,0,352,353,5,95,0,0,353,354,5,84,0,0,354,355,5,73,0,0,355,356,5,
		77,0,0,356,360,5,69,0,0,357,358,5,68,0,0,358,360,5,84,0,0,359,344,1,0,
		0,0,359,357,1,0,0,0,360,62,1,0,0,0,361,362,5,83,0,0,362,363,5,84,0,0,363,
		364,5,82,0,0,364,365,5,73,0,0,365,366,5,78,0,0,366,367,5,71,0,0,367,64,
		1,0,0,0,368,369,5,66,0,0,369,370,5,89,0,0,370,371,5,84,0,0,371,372,5,69,
		0,0,372,66,1,0,0,0,373,374,5,87,0,0,374,375,5,79,0,0,375,376,5,82,0,0,
		376,377,5,68,0,0,377,68,1,0,0,0,378,379,5,68,0,0,379,380,5,87,0,0,380,
		381,5,79,0,0,381,382,5,82,0,0,382,383,5,68,0,0,383,70,1,0,0,0,384,385,
		5,76,0,0,385,386,5,87,0,0,386,387,5,79,0,0,387,388,5,82,0,0,388,389,5,
		68,0,0,389,72,1,0,0,0,390,391,5,87,0,0,391,392,5,83,0,0,392,393,5,84,0,
		0,393,394,5,82,0,0,394,395,5,73,0,0,395,396,5,78,0,0,396,397,5,71,0,0,
		397,74,1,0,0,0,398,399,5,65,0,0,399,400,5,78,0,0,400,401,5,89,0,0,401,
		76,1,0,0,0,402,403,5,65,0,0,403,404,5,78,0,0,404,405,5,89,0,0,405,406,
		5,95,0,0,406,407,5,68,0,0,407,408,5,69,0,0,408,409,5,82,0,0,409,410,5,
		73,0,0,410,411,5,86,0,0,411,412,5,69,0,0,412,413,5,68,0,0,413,78,1,0,0,
		0,414,415,5,65,0,0,415,416,5,78,0,0,416,417,5,89,0,0,417,418,5,95,0,0,
		418,419,5,69,0,0,419,420,5,76,0,0,420,421,5,69,0,0,421,422,5,77,0,0,422,
		423,5,69,0,0,423,424,5,78,0,0,424,425,5,84,0,0,425,426,5,65,0,0,426,427,
		5,82,0,0,427,428,5,89,0,0,428,80,1,0,0,0,429,430,5,65,0,0,430,431,5,78,
		0,0,431,432,5,89,0,0,432,433,5,95,0,0,433,434,5,77,0,0,434,435,5,65,0,
		0,435,436,5,71,0,0,436,437,5,78,0,0,437,438,5,73,0,0,438,439,5,84,0,0,
		439,440,5,85,0,0,440,441,5,68,0,0,441,442,5,69,0,0,442,82,1,0,0,0,443,
		444,5,65,0,0,444,445,5,78,0,0,445,446,5,89,0,0,446,447,5,95,0,0,447,448,
		5,78,0,0,448,449,5,85,0,0,449,450,5,77,0,0,450,84,1,0,0,0,451,452,5,65,
		0,0,452,453,5,78,0,0,453,454,5,89,0,0,454,455,5,95,0,0,455,456,5,82,0,
		0,456,457,5,69,0,0,457,458,5,65,0,0,458,459,5,76,0,0,459,86,1,0,0,0,460,
		461,5,65,0,0,461,462,5,78,0,0,462,463,5,89,0,0,463,464,5,95,0,0,464,465,
		5,73,0,0,465,466,5,78,0,0,466,467,5,84,0,0,467,88,1,0,0,0,468,469,5,65,
		0,0,469,470,5,78,0,0,470,471,5,89,0,0,471,472,5,95,0,0,472,473,5,66,0,
		0,473,474,5,73,0,0,474,475,5,84,0,0,475,90,1,0,0,0,476,477,5,65,0,0,477,
		478,5,78,0,0,478,479,5,89,0,0,479,480,5,95,0,0,480,481,5,83,0,0,481,482,
		5,84,0,0,482,483,5,82,0,0,483,484,5,73,0,0,484,485,5,78,0,0,485,486,5,
		71,0,0,486,92,1,0,0,0,487,488,5,65,0,0,488,489,5,78,0,0,489,490,5,89,0,
		0,490,491,5,95,0,0,491,492,5,68,0,0,492,493,5,65,0,0,493,494,5,84,0,0,
		494,495,5,69,0,0,495,94,1,0,0,0,496,497,5,84,0,0,497,498,5,89,0,0,498,
		499,5,80,0,0,499,500,5,69,0,0,500,96,1,0,0,0,501,502,5,69,0,0,502,503,
		5,78,0,0,503,504,5,68,0,0,504,505,5,95,0,0,505,506,5,84,0,0,506,507,5,
		89,0,0,507,508,5,80,0,0,508,509,5,69,0,0,509,98,1,0,0,0,510,511,5,65,0,
		0,511,512,5,82,0,0,512,513,5,82,0,0,513,514,5,65,0,0,514,515,5,89,0,0,
		515,100,1,0,0,0,516,517,5,79,0,0,517,518,5,70,0,0,518,102,1,0,0,0,519,
		520,5,83,0,0,520,521,5,84,0,0,521,522,5,82,0,0,522,523,5,85,0,0,523,524,
		5,67,0,0,524,525,5,84,0,0,525,104,1,0,0,0,526,527,5,47,0,0,527,528,5,47,
		0,0,528,532,1,0,0,0,529,531,9,0,0,0,530,529,1,0,0,0,531,534,1,0,0,0,532,
		533,1,0,0,0,532,530,1,0,0,0,533,536,1,0,0,0,534,532,1,0,0,0,535,537,5,
		13,0,0,536,535,1,0,0,0,536,537,1,0,0,0,537,538,1,0,0,0,538,539,5,10,0,
		0,539,540,1,0,0,0,540,541,6,52,0,0,541,106,1,0,0,0,542,543,5,47,0,0,543,
		544,5,42,0,0,544,548,1,0,0,0,545,547,9,0,0,0,546,545,1,0,0,0,547,550,1,
		0,0,0,548,549,1,0,0,0,548,546,1,0,0,0,549,551,1,0,0,0,550,548,1,0,0,0,
		551,552,5,42,0,0,552,553,5,47,0,0,553,554,1,0,0,0,554,555,6,53,0,0,555,
		108,1,0,0,0,556,558,7,0,0,0,557,556,1,0,0,0,558,559,1,0,0,0,559,557,1,
		0,0,0,559,560,1,0,0,0,560,561,1,0,0,0,561,562,6,54,0,0,562,110,1,0,0,0,
		7,0,342,359,532,536,548,559,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
