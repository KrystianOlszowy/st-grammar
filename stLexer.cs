//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/kryst/Desktop/Praca magisterska/st-grammar/st.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class stLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, PROGRAM=14, END_PROGRAM=15, SINGLE_BYTE_STRING=16, 
		DOUBLE_BYTE_STRING=17, DURATION=18, DATE_TIME_VALUE=19, DATE_VALUE=20, 
		CLOCK_TIME=21, SIGNED_INT=22, UNSIGNED_INT=23, BINARY_INT=24, OCTAL_INT=25, 
		HEX_INT=26, SIMPLE_REAL=27, BOOLEAN=28, USINT=29, UINT=30, UDINT=31, ULINT=32, 
		SINT=33, INT=34, DINT=35, LINT=36, REAL=37, LREAL=38, BYTE=39, WORD=40, 
		DWORD=41, LWORD=42, BOOL=43, STRING=44, WSTRING=45, CHAR=46, WCHAR=47, 
		TIME=48, LTIME=49, TIME_OF_DAY=50, LTIME_OF_DAY=51, DATE=52, LDATE=53, 
		DATE_AND_TIME=54, LDATE_AND_TIME=55, DOT=56, IDENTIFIER=57, PRAGMA=58, 
		LINE_COMMENT=59, SLASH_COMMENT=60, BRACE_COMMENT=61, WHITESPACE=62;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "PROGRAM", "END_PROGRAM", "SINGLE_BYTE_STRING", 
		"DOUBLE_BYTE_STRING", "DURATION", "DATE_TIME_VALUE", "DATE_VALUE", "CLOCK_TIME", 
		"SIGNED_INT", "UNSIGNED_INT", "BINARY_INT", "OCTAL_INT", "HEX_INT", "SIMPLE_REAL", 
		"BOOLEAN", "USINT", "UINT", "UDINT", "ULINT", "SINT", "INT", "DINT", "LINT", 
		"REAL", "LREAL", "BYTE", "WORD", "DWORD", "LWORD", "BOOL", "STRING", "WSTRING", 
		"CHAR", "WCHAR", "TIME", "LTIME", "TIME_OF_DAY", "LTIME_OF_DAY", "DATE", 
		"LDATE", "DATE_AND_TIME", "LDATE_AND_TIME", "DOT", "NON_DIGIT", "DIGIT", 
		"BIT", "OCTAL_DIGIT", "HEX_DIGIT", "SINGLE_BYTE_CHAR", "DOUBLE_BYTE_CHAR", 
		"COMMON_CHAR", "TWO_CHAR_COMMON", "DURATION_SEGMENT", "DURATION_UNIT", 
		"IDENTIFIER", "PRAGMA", "LINE_COMMENT", "SLASH_COMMENT", "BRACE_COMMENT", 
		"WHITESPACE"
	};


	public stLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public stLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'#'", "'E'", "'0'", "'1'", "'T'", "'LT'", "'+'", "'-'", 
		"'D'", "'LD'", "'DT'", "'LDT'", "'PROGRAM'", "'END_PROGRAM'", null, null, 
		null, null, null, null, null, null, null, null, null, null, null, "'USINT'", 
		"'UINT'", "'UDINT'", "'ULINT'", "'SINT'", "'INT'", "'DINT'", "'LINT'", 
		"'REAL'", "'LREAL'", "'BYTE'", "'WORD'", "'DWORD'", "'LWORD'", "'BOOL'", 
		"'STRING'", "'WSTRING'", "'CHAR'", "'WCHAR'", "'TIME'", "'LTIME'", "'TIME_OF_DAY'", 
		"'LTIME_OF_DAY'", "'DATE'", "'LDATE'", "'DATE_AND_TIME'", "'LDATE_AND_TIME'", 
		"'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "PROGRAM", "END_PROGRAM", "SINGLE_BYTE_STRING", "DOUBLE_BYTE_STRING", 
		"DURATION", "DATE_TIME_VALUE", "DATE_VALUE", "CLOCK_TIME", "SIGNED_INT", 
		"UNSIGNED_INT", "BINARY_INT", "OCTAL_INT", "HEX_INT", "SIMPLE_REAL", "BOOLEAN", 
		"USINT", "UINT", "UDINT", "ULINT", "SINT", "INT", "DINT", "LINT", "REAL", 
		"LREAL", "BYTE", "WORD", "DWORD", "LWORD", "BOOL", "STRING", "WSTRING", 
		"CHAR", "WCHAR", "TIME", "LTIME", "TIME_OF_DAY", "LTIME_OF_DAY", "DATE", 
		"LDATE", "DATE_AND_TIME", "LDATE_AND_TIME", "DOT", "IDENTIFIER", "PRAGMA", 
		"LINE_COMMENT", "SLASH_COMMENT", "BRACE_COMMENT", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "st.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static stLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,62,671,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,
		5,1,6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,
		12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,
		14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,5,15,201,8,15,
		10,15,12,15,204,9,15,1,15,1,15,1,16,1,16,5,16,210,8,16,10,16,12,16,213,
		9,16,1,16,1,16,1,17,4,17,218,8,17,11,17,12,17,219,1,18,1,18,1,18,1,18,
		1,19,4,19,227,8,19,11,19,12,19,228,1,19,1,19,4,19,233,8,19,11,19,12,19,
		234,1,19,1,19,4,19,239,8,19,11,19,12,19,240,1,20,4,20,244,8,20,11,20,12,
		20,245,1,20,1,20,4,20,250,8,20,11,20,12,20,251,1,20,1,20,4,20,256,8,20,
		11,20,12,20,257,1,20,1,20,4,20,262,8,20,11,20,12,20,263,3,20,266,8,20,
		1,21,1,21,1,21,1,22,1,22,3,22,273,8,22,1,22,5,22,276,8,22,10,22,12,22,
		279,9,22,1,23,1,23,1,23,1,23,3,23,285,8,23,1,23,4,23,288,8,23,11,23,12,
		23,289,1,24,1,24,1,24,1,24,3,24,296,8,24,1,24,4,24,299,8,24,11,24,12,24,
		300,1,25,1,25,1,25,1,25,1,25,3,25,308,8,25,1,25,4,25,311,8,25,11,25,12,
		25,312,1,26,1,26,3,26,317,8,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,
		1,27,1,27,1,27,1,27,3,27,331,8,27,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,
		29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,
		31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,
		34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,
		37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,
		40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,
		42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,
		44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,
		46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,
		49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,
		50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,
		52,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,
		53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,
		54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,
		58,1,59,1,59,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,3,61,535,
		8,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,3,62,547,8,62,1,
		63,1,63,1,63,1,63,1,63,3,63,554,8,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,
		1,64,1,64,1,64,1,64,1,64,3,64,568,8,64,1,65,4,65,571,8,65,11,65,12,65,
		572,1,65,1,65,4,65,577,8,65,11,65,12,65,578,3,65,581,8,65,1,65,1,65,1,
		65,4,65,586,8,65,11,65,12,65,587,1,65,1,65,3,65,592,8,65,3,65,594,8,65,
		1,66,1,66,1,66,1,66,1,66,1,66,1,66,3,66,603,8,66,1,67,1,67,1,67,5,67,608,
		8,67,10,67,12,67,611,9,67,1,68,1,68,5,68,615,8,68,10,68,12,68,618,9,68,
		1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,5,69,628,8,69,10,69,12,69,631,
		9,69,1,69,1,69,1,70,1,70,1,70,1,70,1,70,5,70,640,8,70,10,70,12,70,643,
		9,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,5,71,655,8,71,10,
		71,12,71,658,9,71,1,71,1,71,1,71,1,71,1,71,1,72,4,72,666,8,72,11,72,12,
		72,667,1,72,1,72,3,616,641,656,0,73,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
		17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,
		41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,
		65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,
		89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,
		111,56,113,0,115,0,117,0,119,0,121,0,123,0,125,0,127,0,129,0,131,0,133,
		0,135,57,137,58,139,59,141,60,143,61,145,62,1,0,11,2,0,43,43,45,45,3,0,
		65,90,95,95,97,122,1,0,48,57,1,0,48,49,1,0,48,55,3,0,48,57,65,70,97,102,
		4,0,32,33,35,35,37,38,40,47,3,0,58,64,91,96,123,126,4,0,68,68,72,72,77,
		77,83,83,2,0,10,10,13,13,3,0,9,10,13,13,32,32,713,0,1,1,0,0,0,0,3,1,0,
		0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,
		1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,
		0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,
		1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
		0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,
		1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,
		0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,
		1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
		0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,
		103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
		135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,
		145,1,0,0,0,1,147,1,0,0,0,3,149,1,0,0,0,5,151,1,0,0,0,7,153,1,0,0,0,9,
		155,1,0,0,0,11,157,1,0,0,0,13,159,1,0,0,0,15,162,1,0,0,0,17,164,1,0,0,
		0,19,166,1,0,0,0,21,168,1,0,0,0,23,171,1,0,0,0,25,174,1,0,0,0,27,178,1,
		0,0,0,29,186,1,0,0,0,31,198,1,0,0,0,33,207,1,0,0,0,35,217,1,0,0,0,37,221,
		1,0,0,0,39,226,1,0,0,0,41,243,1,0,0,0,43,267,1,0,0,0,45,270,1,0,0,0,47,
		280,1,0,0,0,49,291,1,0,0,0,51,302,1,0,0,0,53,316,1,0,0,0,55,330,1,0,0,
		0,57,332,1,0,0,0,59,338,1,0,0,0,61,343,1,0,0,0,63,349,1,0,0,0,65,355,1,
		0,0,0,67,360,1,0,0,0,69,364,1,0,0,0,71,369,1,0,0,0,73,374,1,0,0,0,75,379,
		1,0,0,0,77,385,1,0,0,0,79,390,1,0,0,0,81,395,1,0,0,0,83,401,1,0,0,0,85,
		407,1,0,0,0,87,412,1,0,0,0,89,419,1,0,0,0,91,427,1,0,0,0,93,432,1,0,0,
		0,95,438,1,0,0,0,97,443,1,0,0,0,99,449,1,0,0,0,101,461,1,0,0,0,103,474,
		1,0,0,0,105,479,1,0,0,0,107,485,1,0,0,0,109,499,1,0,0,0,111,514,1,0,0,
		0,113,516,1,0,0,0,115,518,1,0,0,0,117,520,1,0,0,0,119,522,1,0,0,0,121,
		524,1,0,0,0,123,534,1,0,0,0,125,546,1,0,0,0,127,553,1,0,0,0,129,567,1,
		0,0,0,131,593,1,0,0,0,133,602,1,0,0,0,135,604,1,0,0,0,137,612,1,0,0,0,
		139,623,1,0,0,0,141,634,1,0,0,0,143,649,1,0,0,0,145,665,1,0,0,0,147,148,
		5,59,0,0,148,2,1,0,0,0,149,150,5,35,0,0,150,4,1,0,0,0,151,152,5,69,0,0,
		152,6,1,0,0,0,153,154,5,48,0,0,154,8,1,0,0,0,155,156,5,49,0,0,156,10,1,
		0,0,0,157,158,5,84,0,0,158,12,1,0,0,0,159,160,5,76,0,0,160,161,5,84,0,
		0,161,14,1,0,0,0,162,163,5,43,0,0,163,16,1,0,0,0,164,165,5,45,0,0,165,
		18,1,0,0,0,166,167,5,68,0,0,167,20,1,0,0,0,168,169,5,76,0,0,169,170,5,
		68,0,0,170,22,1,0,0,0,171,172,5,68,0,0,172,173,5,84,0,0,173,24,1,0,0,0,
		174,175,5,76,0,0,175,176,5,68,0,0,176,177,5,84,0,0,177,26,1,0,0,0,178,
		179,5,80,0,0,179,180,5,82,0,0,180,181,5,79,0,0,181,182,5,71,0,0,182,183,
		5,82,0,0,183,184,5,65,0,0,184,185,5,77,0,0,185,28,1,0,0,0,186,187,5,69,
		0,0,187,188,5,78,0,0,188,189,5,68,0,0,189,190,5,95,0,0,190,191,5,80,0,
		0,191,192,5,82,0,0,192,193,5,79,0,0,193,194,5,71,0,0,194,195,5,82,0,0,
		195,196,5,65,0,0,196,197,5,77,0,0,197,30,1,0,0,0,198,202,5,39,0,0,199,
		201,3,123,61,0,200,199,1,0,0,0,201,204,1,0,0,0,202,200,1,0,0,0,202,203,
		1,0,0,0,203,205,1,0,0,0,204,202,1,0,0,0,205,206,5,39,0,0,206,32,1,0,0,
		0,207,211,5,34,0,0,208,210,3,125,62,0,209,208,1,0,0,0,210,213,1,0,0,0,
		211,209,1,0,0,0,211,212,1,0,0,0,212,214,1,0,0,0,213,211,1,0,0,0,214,215,
		5,34,0,0,215,34,1,0,0,0,216,218,3,131,65,0,217,216,1,0,0,0,218,219,1,0,
		0,0,219,217,1,0,0,0,219,220,1,0,0,0,220,36,1,0,0,0,221,222,3,39,19,0,222,
		223,5,45,0,0,223,224,3,41,20,0,224,38,1,0,0,0,225,227,3,115,57,0,226,225,
		1,0,0,0,227,228,1,0,0,0,228,226,1,0,0,0,228,229,1,0,0,0,229,230,1,0,0,
		0,230,232,5,45,0,0,231,233,3,115,57,0,232,231,1,0,0,0,233,234,1,0,0,0,
		234,232,1,0,0,0,234,235,1,0,0,0,235,236,1,0,0,0,236,238,5,45,0,0,237,239,
		3,115,57,0,238,237,1,0,0,0,239,240,1,0,0,0,240,238,1,0,0,0,240,241,1,0,
		0,0,241,40,1,0,0,0,242,244,3,115,57,0,243,242,1,0,0,0,244,245,1,0,0,0,
		245,243,1,0,0,0,245,246,1,0,0,0,246,247,1,0,0,0,247,249,5,58,0,0,248,250,
		3,115,57,0,249,248,1,0,0,0,250,251,1,0,0,0,251,249,1,0,0,0,251,252,1,0,
		0,0,252,253,1,0,0,0,253,255,5,58,0,0,254,256,3,115,57,0,255,254,1,0,0,
		0,256,257,1,0,0,0,257,255,1,0,0,0,257,258,1,0,0,0,258,265,1,0,0,0,259,
		261,5,46,0,0,260,262,3,115,57,0,261,260,1,0,0,0,262,263,1,0,0,0,263,261,
		1,0,0,0,263,264,1,0,0,0,264,266,1,0,0,0,265,259,1,0,0,0,265,266,1,0,0,
		0,266,42,1,0,0,0,267,268,7,0,0,0,268,269,3,45,22,0,269,44,1,0,0,0,270,
		277,3,115,57,0,271,273,5,95,0,0,272,271,1,0,0,0,272,273,1,0,0,0,273,274,
		1,0,0,0,274,276,3,115,57,0,275,272,1,0,0,0,276,279,1,0,0,0,277,275,1,0,
		0,0,277,278,1,0,0,0,278,46,1,0,0,0,279,277,1,0,0,0,280,281,5,50,0,0,281,
		282,5,35,0,0,282,287,1,0,0,0,283,285,5,95,0,0,284,283,1,0,0,0,284,285,
		1,0,0,0,285,286,1,0,0,0,286,288,3,117,58,0,287,284,1,0,0,0,288,289,1,0,
		0,0,289,287,1,0,0,0,289,290,1,0,0,0,290,48,1,0,0,0,291,292,5,56,0,0,292,
		293,5,35,0,0,293,298,1,0,0,0,294,296,5,95,0,0,295,294,1,0,0,0,295,296,
		1,0,0,0,296,297,1,0,0,0,297,299,3,119,59,0,298,295,1,0,0,0,299,300,1,0,
		0,0,300,298,1,0,0,0,300,301,1,0,0,0,301,50,1,0,0,0,302,303,5,49,0,0,303,
		304,5,54,0,0,304,305,5,35,0,0,305,310,1,0,0,0,306,308,5,95,0,0,307,306,
		1,0,0,0,307,308,1,0,0,0,308,309,1,0,0,0,309,311,3,121,60,0,310,307,1,0,
		0,0,311,312,1,0,0,0,312,310,1,0,0,0,312,313,1,0,0,0,313,52,1,0,0,0,314,
		317,3,43,21,0,315,317,3,45,22,0,316,314,1,0,0,0,316,315,1,0,0,0,317,318,
		1,0,0,0,318,319,3,111,55,0,319,320,3,45,22,0,320,54,1,0,0,0,321,322,5,
		70,0,0,322,323,5,65,0,0,323,324,5,76,0,0,324,325,5,83,0,0,325,331,5,69,
		0,0,326,327,5,84,0,0,327,328,5,82,0,0,328,329,5,85,0,0,329,331,5,69,0,
		0,330,321,1,0,0,0,330,326,1,0,0,0,331,56,1,0,0,0,332,333,5,85,0,0,333,
		334,5,83,0,0,334,335,5,73,0,0,335,336,5,78,0,0,336,337,5,84,0,0,337,58,
		1,0,0,0,338,339,5,85,0,0,339,340,5,73,0,0,340,341,5,78,0,0,341,342,5,84,
		0,0,342,60,1,0,0,0,343,344,5,85,0,0,344,345,5,68,0,0,345,346,5,73,0,0,
		346,347,5,78,0,0,347,348,5,84,0,0,348,62,1,0,0,0,349,350,5,85,0,0,350,
		351,5,76,0,0,351,352,5,73,0,0,352,353,5,78,0,0,353,354,5,84,0,0,354,64,
		1,0,0,0,355,356,5,83,0,0,356,357,5,73,0,0,357,358,5,78,0,0,358,359,5,84,
		0,0,359,66,1,0,0,0,360,361,5,73,0,0,361,362,5,78,0,0,362,363,5,84,0,0,
		363,68,1,0,0,0,364,365,5,68,0,0,365,366,5,73,0,0,366,367,5,78,0,0,367,
		368,5,84,0,0,368,70,1,0,0,0,369,370,5,76,0,0,370,371,5,73,0,0,371,372,
		5,78,0,0,372,373,5,84,0,0,373,72,1,0,0,0,374,375,5,82,0,0,375,376,5,69,
		0,0,376,377,5,65,0,0,377,378,5,76,0,0,378,74,1,0,0,0,379,380,5,76,0,0,
		380,381,5,82,0,0,381,382,5,69,0,0,382,383,5,65,0,0,383,384,5,76,0,0,384,
		76,1,0,0,0,385,386,5,66,0,0,386,387,5,89,0,0,387,388,5,84,0,0,388,389,
		5,69,0,0,389,78,1,0,0,0,390,391,5,87,0,0,391,392,5,79,0,0,392,393,5,82,
		0,0,393,394,5,68,0,0,394,80,1,0,0,0,395,396,5,68,0,0,396,397,5,87,0,0,
		397,398,5,79,0,0,398,399,5,82,0,0,399,400,5,68,0,0,400,82,1,0,0,0,401,
		402,5,76,0,0,402,403,5,87,0,0,403,404,5,79,0,0,404,405,5,82,0,0,405,406,
		5,68,0,0,406,84,1,0,0,0,407,408,5,66,0,0,408,409,5,79,0,0,409,410,5,79,
		0,0,410,411,5,76,0,0,411,86,1,0,0,0,412,413,5,83,0,0,413,414,5,84,0,0,
		414,415,5,82,0,0,415,416,5,73,0,0,416,417,5,78,0,0,417,418,5,71,0,0,418,
		88,1,0,0,0,419,420,5,87,0,0,420,421,5,83,0,0,421,422,5,84,0,0,422,423,
		5,82,0,0,423,424,5,73,0,0,424,425,5,78,0,0,425,426,5,71,0,0,426,90,1,0,
		0,0,427,428,5,67,0,0,428,429,5,72,0,0,429,430,5,65,0,0,430,431,5,82,0,
		0,431,92,1,0,0,0,432,433,5,87,0,0,433,434,5,67,0,0,434,435,5,72,0,0,435,
		436,5,65,0,0,436,437,5,82,0,0,437,94,1,0,0,0,438,439,5,84,0,0,439,440,
		5,73,0,0,440,441,5,77,0,0,441,442,5,69,0,0,442,96,1,0,0,0,443,444,5,76,
		0,0,444,445,5,84,0,0,445,446,5,73,0,0,446,447,5,77,0,0,447,448,5,69,0,
		0,448,98,1,0,0,0,449,450,5,84,0,0,450,451,5,73,0,0,451,452,5,77,0,0,452,
		453,5,69,0,0,453,454,5,95,0,0,454,455,5,79,0,0,455,456,5,70,0,0,456,457,
		5,95,0,0,457,458,5,68,0,0,458,459,5,65,0,0,459,460,5,89,0,0,460,100,1,
		0,0,0,461,462,5,76,0,0,462,463,5,84,0,0,463,464,5,73,0,0,464,465,5,77,
		0,0,465,466,5,69,0,0,466,467,5,95,0,0,467,468,5,79,0,0,468,469,5,70,0,
		0,469,470,5,95,0,0,470,471,5,68,0,0,471,472,5,65,0,0,472,473,5,89,0,0,
		473,102,1,0,0,0,474,475,5,68,0,0,475,476,5,65,0,0,476,477,5,84,0,0,477,
		478,5,69,0,0,478,104,1,0,0,0,479,480,5,76,0,0,480,481,5,68,0,0,481,482,
		5,65,0,0,482,483,5,84,0,0,483,484,5,69,0,0,484,106,1,0,0,0,485,486,5,68,
		0,0,486,487,5,65,0,0,487,488,5,84,0,0,488,489,5,69,0,0,489,490,5,95,0,
		0,490,491,5,65,0,0,491,492,5,78,0,0,492,493,5,68,0,0,493,494,5,95,0,0,
		494,495,5,84,0,0,495,496,5,73,0,0,496,497,5,77,0,0,497,498,5,69,0,0,498,
		108,1,0,0,0,499,500,5,76,0,0,500,501,5,68,0,0,501,502,5,65,0,0,502,503,
		5,84,0,0,503,504,5,69,0,0,504,505,5,95,0,0,505,506,5,65,0,0,506,507,5,
		78,0,0,507,508,5,68,0,0,508,509,5,95,0,0,509,510,5,84,0,0,510,511,5,73,
		0,0,511,512,5,77,0,0,512,513,5,69,0,0,513,110,1,0,0,0,514,515,5,46,0,0,
		515,112,1,0,0,0,516,517,7,1,0,0,517,114,1,0,0,0,518,519,7,2,0,0,519,116,
		1,0,0,0,520,521,7,3,0,0,521,118,1,0,0,0,522,523,7,4,0,0,523,120,1,0,0,
		0,524,525,7,5,0,0,525,122,1,0,0,0,526,535,3,127,63,0,527,528,5,36,0,0,
		528,535,5,39,0,0,529,535,5,34,0,0,530,531,5,36,0,0,531,532,3,121,60,0,
		532,533,3,121,60,0,533,535,1,0,0,0,534,526,1,0,0,0,534,527,1,0,0,0,534,
		529,1,0,0,0,534,530,1,0,0,0,535,124,1,0,0,0,536,547,3,127,63,0,537,547,
		5,39,0,0,538,539,5,36,0,0,539,547,5,34,0,0,540,541,5,36,0,0,541,542,3,
		121,60,0,542,543,3,121,60,0,543,544,3,121,60,0,544,545,3,121,60,0,545,
		547,1,0,0,0,546,536,1,0,0,0,546,537,1,0,0,0,546,538,1,0,0,0,546,540,1,
		0,0,0,547,126,1,0,0,0,548,554,7,6,0,0,549,554,3,115,57,0,550,554,3,113,
		56,0,551,554,7,7,0,0,552,554,3,129,64,0,553,548,1,0,0,0,553,549,1,0,0,
		0,553,550,1,0,0,0,553,551,1,0,0,0,553,552,1,0,0,0,554,128,1,0,0,0,555,
		556,5,36,0,0,556,568,5,36,0,0,557,558,5,36,0,0,558,568,5,76,0,0,559,560,
		5,36,0,0,560,568,5,78,0,0,561,562,5,36,0,0,562,568,5,80,0,0,563,564,5,
		36,0,0,564,568,5,82,0,0,565,566,5,36,0,0,566,568,5,84,0,0,567,555,1,0,
		0,0,567,557,1,0,0,0,567,559,1,0,0,0,567,561,1,0,0,0,567,563,1,0,0,0,567,
		565,1,0,0,0,568,130,1,0,0,0,569,571,3,115,57,0,570,569,1,0,0,0,571,572,
		1,0,0,0,572,570,1,0,0,0,572,573,1,0,0,0,573,580,1,0,0,0,574,576,5,46,0,
		0,575,577,3,115,57,0,576,575,1,0,0,0,577,578,1,0,0,0,578,576,1,0,0,0,578,
		579,1,0,0,0,579,581,1,0,0,0,580,574,1,0,0,0,580,581,1,0,0,0,581,582,1,
		0,0,0,582,583,3,133,66,0,583,594,1,0,0,0,584,586,3,115,57,0,585,584,1,
		0,0,0,586,587,1,0,0,0,587,585,1,0,0,0,587,588,1,0,0,0,588,589,1,0,0,0,
		589,591,3,133,66,0,590,592,5,95,0,0,591,590,1,0,0,0,591,592,1,0,0,0,592,
		594,1,0,0,0,593,570,1,0,0,0,593,585,1,0,0,0,594,132,1,0,0,0,595,603,7,
		8,0,0,596,597,5,77,0,0,597,603,5,83,0,0,598,599,5,85,0,0,599,603,5,83,
		0,0,600,601,5,78,0,0,601,603,5,83,0,0,602,595,1,0,0,0,602,596,1,0,0,0,
		602,598,1,0,0,0,602,600,1,0,0,0,603,134,1,0,0,0,604,609,3,113,56,0,605,
		608,3,113,56,0,606,608,3,115,57,0,607,605,1,0,0,0,607,606,1,0,0,0,608,
		611,1,0,0,0,609,607,1,0,0,0,609,610,1,0,0,0,610,136,1,0,0,0,611,609,1,
		0,0,0,612,616,5,123,0,0,613,615,9,0,0,0,614,613,1,0,0,0,615,618,1,0,0,
		0,616,617,1,0,0,0,616,614,1,0,0,0,617,619,1,0,0,0,618,616,1,0,0,0,619,
		620,5,125,0,0,620,621,1,0,0,0,621,622,6,68,0,0,622,138,1,0,0,0,623,624,
		5,47,0,0,624,625,5,47,0,0,625,629,1,0,0,0,626,628,8,9,0,0,627,626,1,0,
		0,0,628,631,1,0,0,0,629,627,1,0,0,0,629,630,1,0,0,0,630,632,1,0,0,0,631,
		629,1,0,0,0,632,633,6,69,0,0,633,140,1,0,0,0,634,635,5,47,0,0,635,636,
		5,42,0,0,636,641,1,0,0,0,637,640,3,141,70,0,638,640,9,0,0,0,639,637,1,
		0,0,0,639,638,1,0,0,0,640,643,1,0,0,0,641,642,1,0,0,0,641,639,1,0,0,0,
		642,644,1,0,0,0,643,641,1,0,0,0,644,645,5,42,0,0,645,646,5,47,0,0,646,
		647,1,0,0,0,647,648,6,70,0,0,648,142,1,0,0,0,649,650,5,40,0,0,650,651,
		5,42,0,0,651,656,1,0,0,0,652,655,3,143,71,0,653,655,9,0,0,0,654,652,1,
		0,0,0,654,653,1,0,0,0,655,658,1,0,0,0,656,657,1,0,0,0,656,654,1,0,0,0,
		657,659,1,0,0,0,658,656,1,0,0,0,659,660,5,42,0,0,660,661,5,41,0,0,661,
		662,1,0,0,0,662,663,6,71,0,0,663,144,1,0,0,0,664,666,7,10,0,0,665,664,
		1,0,0,0,666,667,1,0,0,0,667,665,1,0,0,0,667,668,1,0,0,0,668,669,1,0,0,
		0,669,670,6,72,0,0,670,146,1,0,0,0,42,0,202,211,219,228,234,240,245,251,
		257,263,265,272,277,284,289,295,300,307,312,316,330,534,546,553,567,572,
		578,580,587,591,593,602,607,609,616,629,639,641,654,656,667,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
